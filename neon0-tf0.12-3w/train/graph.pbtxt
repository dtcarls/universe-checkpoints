node {
  name: "global/Placeholder"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global/l1/W"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/l1/W/Initializer/random_uniform/shape"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/l1/W/Initializer/random_uniform/max"
  input: "global/l1/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/l1/W/Initializer/random_uniform/RandomUniform"
  input: "global/l1/W/Initializer/random_uniform/sub"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l1/W/Initializer/random_uniform"
  op: "Add"
  input: "global/l1/W/Initializer/random_uniform/mul"
  input: "global/l1/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l1/W/Assign"
  op: "Assign"
  input: "global/l1/W"
  input: "global/l1/W/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/W/read"
  op: "Identity"
  input: "global/l1/W"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l1/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l1/b/Assign"
  op: "Assign"
  input: "global/l1/b"
  input: "global/l1/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/b/read"
  op: "Identity"
  input: "global/l1/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l1/Conv2D"
  op: "Conv2D"
  input: "global/Placeholder"
  input: "global/l1/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/add"
  op: "Add"
  input: "global/l1/Conv2D"
  input: "global/l1/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Elu"
  op: "Elu"
  input: "global/l1/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l2/W"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/l2/W/Initializer/random_uniform/shape"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/l2/W/Initializer/random_uniform/max"
  input: "global/l2/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/l2/W/Initializer/random_uniform/RandomUniform"
  input: "global/l2/W/Initializer/random_uniform/sub"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l2/W/Initializer/random_uniform"
  op: "Add"
  input: "global/l2/W/Initializer/random_uniform/mul"
  input: "global/l2/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l2/W/Assign"
  op: "Assign"
  input: "global/l2/W"
  input: "global/l2/W/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/W/read"
  op: "Identity"
  input: "global/l2/W"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l2/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l2/b/Assign"
  op: "Assign"
  input: "global/l2/b"
  input: "global/l2/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/b/read"
  op: "Identity"
  input: "global/l2/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l2/Conv2D"
  op: "Conv2D"
  input: "global/Elu"
  input: "global/l2/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/add"
  op: "Add"
  input: "global/l2/Conv2D"
  input: "global/l2/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Elu_1"
  op: "Elu"
  input: "global/l2/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l3/W"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/l3/W/Initializer/random_uniform/shape"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/l3/W/Initializer/random_uniform/max"
  input: "global/l3/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/l3/W/Initializer/random_uniform/RandomUniform"
  input: "global/l3/W/Initializer/random_uniform/sub"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l3/W/Initializer/random_uniform"
  op: "Add"
  input: "global/l3/W/Initializer/random_uniform/mul"
  input: "global/l3/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l3/W/Assign"
  op: "Assign"
  input: "global/l3/W"
  input: "global/l3/W/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/W/read"
  op: "Identity"
  input: "global/l3/W"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l3/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l3/b/Assign"
  op: "Assign"
  input: "global/l3/b"
  input: "global/l3/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/b/read"
  op: "Identity"
  input: "global/l3/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l3/Conv2D"
  op: "Conv2D"
  input: "global/Elu_1"
  input: "global/l3/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/add"
  op: "Add"
  input: "global/l3/Conv2D"
  input: "global/l3/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Elu_2"
  op: "Elu"
  input: "global/l3/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l4/W"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/l4/W/Initializer/random_uniform/shape"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/l4/W/Initializer/random_uniform/max"
  input: "global/l4/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/l4/W/Initializer/random_uniform/RandomUniform"
  input: "global/l4/W/Initializer/random_uniform/sub"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l4/W/Initializer/random_uniform"
  op: "Add"
  input: "global/l4/W/Initializer/random_uniform/mul"
  input: "global/l4/W/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l4/W/Assign"
  op: "Assign"
  input: "global/l4/W"
  input: "global/l4/W/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/W/read"
  op: "Identity"
  input: "global/l4/W"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l4/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l4/b/Assign"
  op: "Assign"
  input: "global/l4/b"
  input: "global/l4/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/b/read"
  op: "Identity"
  input: "global/l4/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/l4/Conv2D"
  op: "Conv2D"
  input: "global/Elu_2"
  input: "global/l4/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/add"
  op: "Add"
  input: "global/l4/Conv2D"
  input: "global/l4/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Elu_3"
  op: "Elu"
  input: "global/l4/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\r\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape"
  op: "Reshape"
  input: "global/Elu_3"
  input: "global/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/ExpandDims"
  op: "ExpandDims"
  input: "global/Reshape"
  input: "global/ExpandDims/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "global/Shape"
  op: "Shape"
  input: "global/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice"
  op: "StridedSlice"
  input: "global/Shape"
  input: "global/strided_slice/stack"
  input: "global/strided_slice/stack_1"
  input: "global/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Placeholder_1"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/Placeholder_2"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/transpose"
  op: "Transpose"
  input: "global/ExpandDims"
  input: "global/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "global/sequence_length"
  op: "Identity"
  input: "global/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/Shape"
  op: "Shape"
  input: "global/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/RNN/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice"
  op: "StridedSlice"
  input: "global/RNN/Shape"
  input: "global/RNN/strided_slice/stack"
  input: "global/RNN/strided_slice/stack_1"
  input: "global/RNN/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/RNN/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "global/RNN/Shape"
  input: "global/RNN/strided_slice_1/stack"
  input: "global/RNN/strided_slice_1/stack_1"
  input: "global/RNN/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/RNN/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/pack"
  op: "Pack"
  input: "global/RNN/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/RNN/Equal"
  op: "Equal"
  input: "global/RNN/Shape_1"
  input: "global/RNN/pack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/All"
  op: "All"
  input: "global/RNN/Equal"
  input: "global/RNN/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/RNN/Assert/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/RNN/Assert/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/RNN/Assert/Assert/data_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/RNN/Assert/Assert/data_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/RNN/Assert/Assert"
  op: "Assert"
  input: "global/RNN/All"
  input: "global/RNN/Assert/Assert/data_0"
  input: "global/RNN/pack"
  input: "global/RNN/Assert/Assert/data_2"
  input: "global/RNN/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "global/RNN/CheckSeqLen"
  op: "Identity"
  input: "global/sequence_length"
  input: "^global/RNN/Assert/Assert"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/Shape_2"
  op: "Shape"
  input: "global/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/RNN/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "global/RNN/Shape_2"
  input: "global/RNN/strided_slice_2/stack"
  input: "global/RNN/strided_slice_2/stack_1"
  input: "global/RNN/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/RNN/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/strided_slice_3"
  op: "StridedSlice"
  input: "global/RNN/Shape_2"
  input: "global/RNN/strided_slice_3/stack"
  input: "global/RNN/strided_slice_3/stack_1"
  input: "global/RNN/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/RNN/pack_1/1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "global/RNN/pack_1"
  op: "Pack"
  input: "global/RNN/strided_slice_3"
  input: "global/RNN/pack_1/1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/RNN/zeros/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/zeros"
  op: "Fill"
  input: "global/RNN/pack_1"
  input: "global/RNN/zeros/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/Min"
  op: "Min"
  input: "global/RNN/CheckSeqLen"
  input: "global/RNN/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/RNN/Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/Max"
  op: "Max"
  input: "global/RNN/CheckSeqLen"
  input: "global/RNN/Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/RNN/time"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArray"
  op: "TensorArrayV2"
  input: "global/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/RNN/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "global/RNN/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArray_1"
  op: "TensorArrayV2"
  input: "global/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/RNN/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "global/RNN/TensorArray_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/Shape"
  op: "Shape"
  input: "global/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/strided_slice"
  op: "StridedSlice"
  input: "global/RNN/TensorArrayPack/Shape"
  input: "global/RNN/TensorArrayPack/strided_slice/stack"
  input: "global/RNN/TensorArrayPack/strided_slice/stack_1"
  input: "global/RNN/TensorArrayPack/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/range"
  op: "Range"
  input: "global/RNN/TensorArrayPack/range/start"
  input: "global/RNN/TensorArrayPack/strided_slice"
  input: "global/RNN/TensorArrayPack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/TensorArrayScatterV2"
  op: "TensorArrayScatterV2"
  input: "global/RNN/TensorArray_1"
  input: "global/RNN/TensorArrayPack/range"
  input: "global/transpose"
  input: "global/RNN/TensorArray_1/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/while/Enter"
  op: "Enter"
  input: "global/RNN/time"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Enter_1"
  op: "Enter"
  input: "global/RNN/TensorArray/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Enter_2"
  op: "Enter"
  input: "global/Placeholder_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Enter_3"
  op: "Enter"
  input: "global/Placeholder_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Merge"
  op: "Merge"
  input: "global/RNN/while/Enter"
  input: "global/RNN/while/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Merge_1"
  op: "Merge"
  input: "global/RNN/while/Enter_1"
  input: "global/RNN/while/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Merge_2"
  op: "Merge"
  input: "global/RNN/while/Enter_2"
  input: "global/RNN/while/NextIteration_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Merge_3"
  op: "Merge"
  input: "global/RNN/while/Enter_3"
  input: "global/RNN/while/NextIteration_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Less/Enter"
  op: "Enter"
  input: "global/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Less"
  op: "Less"
  input: "global/RNN/while/Merge"
  input: "global/RNN/while/Less/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/LoopCond"
  op: "LoopCond"
  input: "global/RNN/while/Less"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Switch"
  op: "Switch"
  input: "global/RNN/while/Merge"
  input: "global/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Switch_1"
  op: "Switch"
  input: "global/RNN/while/Merge_1"
  input: "global/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Switch_2"
  op: "Switch"
  input: "global/RNN/while/Merge_2"
  input: "global/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Switch_3"
  op: "Switch"
  input: "global/RNN/while/Merge_3"
  input: "global/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Identity"
  op: "Identity"
  input: "global/RNN/while/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Identity_1"
  op: "Identity"
  input: "global/RNN/while/Switch_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Identity_2"
  op: "Identity"
  input: "global/RNN/while/Switch_2:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Identity_3"
  op: "Identity"
  input: "global/RNN/while/Switch_3:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/TensorArrayReadV2/Enter"
  op: "Enter"
  input: "global/RNN/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/TensorArrayReadV2/Enter_1"
  op: "Enter"
  input: "global/RNN/TensorArrayPack/TensorArrayScatterV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/TensorArrayReadV2"
  op: "TensorArrayReadV2"
  input: "global/RNN/while/TensorArrayReadV2/Enter"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/TensorArrayReadV2/Enter_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3584
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\016\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0289318785071373
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0289318785071373
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  input: "^global/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "global/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
  input: "global/RNN/while/TensorArrayReadV2"
  input: "global/RNN/while/Identity_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3584
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Linear/MatMul/Enter"
  op: "Enter"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "global/RNN/while/BasicLSTMCell/Linear/concat"
  input: "global/RNN/while/BasicLSTMCell/Linear/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/add/Enter"
  op: "Enter"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/add"
  op: "Add"
  input: "global/RNN/while/BasicLSTMCell/Linear/MatMul"
  input: "global/RNN/while/BasicLSTMCell/add/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/split/split_dim"
  op: "Const"
  input: "^global/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/split"
  op: "Split"
  input: "global/RNN/while/BasicLSTMCell/split/split_dim"
  input: "global/RNN/while/BasicLSTMCell/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/add_1/y"
  op: "Const"
  input: "^global/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/add_1"
  op: "Add"
  input: "global/RNN/while/BasicLSTMCell/split:2"
  input: "global/RNN/while/BasicLSTMCell/add_1/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "global/RNN/while/BasicLSTMCell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/mul"
  op: "Mul"
  input: "global/RNN/while/Identity_2"
  input: "global/RNN/while/BasicLSTMCell/Sigmoid"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "global/RNN/while/BasicLSTMCell/split"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "global/RNN/while/BasicLSTMCell/split:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "global/RNN/while/BasicLSTMCell/Sigmoid_1"
  input: "global/RNN/while/BasicLSTMCell/Tanh"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/add_2"
  op: "Add"
  input: "global/RNN/while/BasicLSTMCell/mul"
  input: "global/RNN/while/BasicLSTMCell/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "global/RNN/while/BasicLSTMCell/add_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "global/RNN/while/BasicLSTMCell/split:3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "global/RNN/while/BasicLSTMCell/Tanh_1"
  input: "global/RNN/while/BasicLSTMCell/Sigmoid_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/GreaterEqual/Enter"
  op: "Enter"
  input: "global/RNN/CheckSeqLen"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/GreaterEqual"
  op: "GreaterEqual"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Select/Enter"
  op: "Enter"
  input: "global/RNN/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/Select"
  op: "Select"
  input: "global/RNN/while/GreaterEqual"
  input: "global/RNN/while/Select/Enter"
  input: "global/RNN/while/BasicLSTMCell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Select_1"
  op: "Select"
  input: "global/RNN/while/GreaterEqual_1"
  input: "global/RNN/while/Identity_2"
  input: "global/RNN/while/BasicLSTMCell/add_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Select_2"
  op: "Select"
  input: "global/RNN/while/GreaterEqual_2"
  input: "global/RNN/while/Identity_3"
  input: "global/RNN/while/BasicLSTMCell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/TensorArrayWriteV2/Enter"
  op: "Enter"
  input: "global/RNN/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/RNN/while/global/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/RNN/while/TensorArrayWriteV2"
  op: "TensorArrayWriteV2"
  input: "global/RNN/while/TensorArrayWriteV2/Enter"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/Select"
  input: "global/RNN/while/Identity_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/TensorArray_2/Const"
  op: "Const"
  input: "^global/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/while/add/y"
  op: "Const"
  input: "^global/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/while/add"
  op: "Add"
  input: "global/RNN/while/Identity"
  input: "global/RNN/while/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/NextIteration"
  op: "NextIteration"
  input: "global/RNN/while/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/NextIteration_1"
  op: "NextIteration"
  input: "global/RNN/while/TensorArrayWriteV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/NextIteration_2"
  op: "NextIteration"
  input: "global/RNN/while/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/NextIteration_3"
  op: "NextIteration"
  input: "global/RNN/while/Select_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Exit"
  op: "Exit"
  input: "global/RNN/while/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Exit_1"
  op: "Exit"
  input: "global/RNN/while/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Exit_2"
  op: "Exit"
  input: "global/RNN/while/Switch_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/while/Exit_3"
  op: "Exit"
  input: "global/RNN/while/Switch_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack_1/TensorArraySizeV2"
  op: "TensorArraySizeV2"
  input: "global/RNN/TensorArray"
  input: "global/RNN/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack_1/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack_1/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack_1/range"
  op: "Range"
  input: "global/RNN/TensorArrayPack_1/range/start"
  input: "global/RNN/TensorArrayPack_1/TensorArraySizeV2"
  input: "global/RNN/TensorArrayPack_1/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/RNN/TensorArrayPack_1/TensorArrayGatherV2"
  op: "TensorArrayGatherV2"
  input: "global/RNN/TensorArray"
  input: "global/RNN/TensorArrayPack_1/range"
  input: "global/RNN/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/RNN/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/RNN/transpose"
  op: "Transpose"
  input: "global/RNN/TensorArrayPack_1/TensorArrayGatherV2"
  input: "global/RNN/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape_1/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape_1"
  op: "Reshape"
  input: "global/RNN/transpose"
  input: "global/Reshape_1/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/action/w"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/w/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\230|\2008\277\377\014\272\200\t\302\271\0013\3359wy\034\272\026\202\3539\020\316\0229\236\302\235\271\005\305\217\272\377R\345\271\025\215\316\271\37626\272\327\314@\272\321\271\3249\314\301&9\314vR\271\"P\223\272\245+f8{;a:H\262b:\036\027\3559\2243`:\375)\2309\346\233\'9\254\240\0279rR\264\271J\236\36685\342\2459\226\324p\272\016\2341\272V\2122:\321\023\2409\332\361*\272:}l\2712\274m:\355\273\33473\301\221\267\010\331\304\267\267)\373\271\027-x:GV\35092;\003\272\367zZ9\314i\222\271\033\010o\272\037\231L\272\014j\031\272\274\345s9\227\254\2518\232$\201\272\032\3461\272\231m-:\022O\336\271)l\2008\003\205\216:`H\3308\322\254\3279\017\023\205\271\000\265\3619~\253\2129H\367x9\021]q\272\235\327\2449Az\333\271\373)6\271\316\t\3279w\031\021\272\315l\2539@;d8\274F\177\272\250\250#:\363}i7\234\025m:w\375\036\272\306\033\217:=V\0209A[\202\271Cr\2459*l;\272B\327Z:\006\356\364\271+@\036:\001oK:t\326\2449\335[\222\272\202k\230\267\361\227x\272\265\327\\\270\334T\275\271\200\234\245\271R\317\2729\232\365E\272\257\001p\271\024E\3119\234\035\2729\256\367\326\2678>4:\344\333\213\272\214:\2729\211@6:\203\245\353\272\366\2745\272\025\300\244\270\364\373\3159\345~H:C\243\024\272M\006\207:\3022Y9\246(u8\352\225\22189&\003:\332\361%9\\B\360\271\225\270\0367 \300\021\272x\272)\272\311z\3609\267\220\335\271D\t\270\270\243\252,:nv\014\271\260\254\277\271\004\326\2639\003\346\004:\221\002\023\272t\014H97\320\336\271Z`I\272\273l\017:\237~\3579\337h\345\271\347\031\2139\211p\21399\217S9-\364\216\271[\260c\272>\010\313\271\231\006H\272\275\205\205\266\033Q\323\2712\t\366\271\234(\2418,\301$:J\245\'90\216#:\277\323\035\272[e\325\270\250\256k\272\254\224\036:;C\310\271\271\312\3308\225\303\300\270.\250\373\271Z\345\225:d#h\271i\364\300\272v\266=\272e\330\204:xh\362\271\026l\034\272\201+t\270,\226\027\272mZ\300\271\357\264\205:\220\335_\272\333\245\0029\243\3428\271Z\372\211\272/\346\2679$w\021\272\251\321\245:\336\255\023:\023\211J\272\360\322\2217\t\213\3479\362\023[\271{\3432\271\3110\262\2715\361\':5\033\3509\234\302\'\271g}\3439\271\344):d\3308\272\356\260 \272\026f.:Q\207\1779\244\307\317\271\0259\26591\260m:\247<\204\2726\212,\272\rO\331\271.\004\007:\276\254{:`M^:\3135\2619e\301w\272=\267\224\270\316@t\272\371\315\3059\037t\257\271\032\327\2619\213\312p\272\356\377v\272#\363\247\271{\363r:\303\355\244\271E\366\2528n>C\272\021\370|\271\364\001\226:\t\244\033:\241\266\204\272\334\312\347\270\374}\035\272Z-\0329\363m\262:\312l\204\271\211>\3209\315\001a\272\267\237\327\270\255B~:m\335\032:\330M\017\272\223\251Y\267d\302\231\271\004a/:2\324\t\271\374ww\267Bm\3359CX\027\270\004b\017\272\216P\321\271Za<9\216\272\3529\026\307\247\2671\344\2657\371\021\257\272\344I\036\272\331\335\2019\214;\276\27055\035\271\342v\252:NRE:y\345\226:\344G\2359v\031\3228\363\225M\272UV8:\nl\2729\220\034\034\272>\306\220:\304\332%:?\355\2559\340\370p\272r}\265:u50\272_\023\256:h\030\2349\3177+\271\222sO\271\022\374\t:\314\322\375\2713\325Q8\033nV:\377\212\305\271o\033>\271F-Q9\262\002\264\271G\277I9\246\324\232\267\332\026\203\2722\004\206\271P\333}\272\024\202>\272\317\264\214\272,\264(\270\314\006@:\377\253\003\272\025zJ\272\022B\231:[\227\002:r2\261\271\236\253\260\271\233\266\230\270&Y\230:\256O\212:\270\262?9\233\312\3129\013\365\242:\313\256d:d=d:\017\364\2369\326p*\271\004\264\016:.<\005\271\377\016?:\272\031*:\305C\213:\307\277\211\270\334\330;7\354\232\0018 \021}\272\203\236\270:\001\232\3358\242\236\233\271\244\254\226\272\205\316\236:UU+\272n|\214\270\325\2674:\320\303p\271\276\255,9GL\n:\245\014\215\272f#\266\271\0240+:i\322U\271\342\320V\272~\\\342\271\326\311\2669\025\344\224\270$\224Q\272\022\017n\272\264\004\225:\210\022h:\301\223\0209\017\350\321\265]\010_\272\223CU\272\r*\334\267\262_\2339\321%\243\271\367:\037\271M@]9\200\252\205\272\021;\3219\325\033\3459\021\371\t:N\022$\273\234\30349\213\265\352\271]\316\217:\027g\203\272\026\341q9@\246#\272\214\327\035:zA6:2[\233:Y&\031\270\322\224\325\271\036b0:L\242\025\272\310\017\034\272\345\000\347\271n;b:\200^\017:\004\322g:\366\021\353\270\004\234\216\272O\014?\272\227\273\3209\254S\2149\335|\0329aZ\\\271@\034\263\271\320/\234\271\364R%\271\031t\021:\027I\265\271\316;c\2728@\0057\226N\\\271\022\357\331\272@\203o\270\305\317I\271)j>\272U\207\2578\305\212\2119\323\216W:*\204]\272\273\2317\271[\321{\272\254\006V\272\253o(:\241\035\214:\003 p\272n\360\352\271i\342\2079\023$>\272/h}\272/9\211\2724c\257\271\334\351\217\272\354+\240\270gNM\272Kj\0029\340\306\3059q\206\"\272W\331\2348\354\251\021:\313h0\272\200\211\0329\250\233V9\322\256\301\271\317\010\251\272\037\305c\271\313f\002:\253t\252\272\344\335S:lN\232\271\004\257#:b]^:+P\236:\2758\342\271\t\205`\271\276\336\344\271\024\020\3729nN\3517\021$[:\243\334|:\247\240\312\271K-\034\272\325\234 \271\001\347\253\272\320Z\0239K\272\2448\003m\253:w\245~\272\000\033\2419\342\2054\272g/8\272P\314\245\272Pk\3509\202\247\254\271[\372,\272\234\032.9\365DX8\265\207\201:\177\364\r:?\206\035\272z\003\213\272Q\236\037\271%s\2278\253\310E9\230\322\333\271\306f\3339\334\211X:\347\246x:\351@@:<\326\257\272n\303G:gM\357\271M\017\362\270iy\025\272\021nC\271\207\242S:,\376\2149\315sB:d\351\257:>x\0309\324\335\330\271\250;\266\271 \204\232\271\351\377\254\272\242\374W90c#8\333lz\272\252^\333\270\253\305\201\272\370\\(\272\365[\230\272E\re\271\027J$:\356\361\":U\317\3219\222\322\323\271\222\010\'\271\004 m\272\024+/9dJ\002\272\327\266\2458\263\215\3359\027\037N:A\212\212\272\272\374^\2722u\337\271\371Z\212\271\215N\342\270\224\266\215\270\242+\216\271\276\022u:|\313\"\270%\204]\272Arz9H%\266\271\255\004\007\270\246\214\'\271\212\n\036\270\032e%:\363Od9\020\241\3609\300\252\362\271q7\274\270%7\203\272\017\270\2609a\3243:\257\026\3218\n\315J\270\\Z\270\271\326\037}:\263\2539\271\354\366\2777\241\330\027\271\305_\316:U\024V\271\273\213\032\272\033\020\223\272\336Z$\272A,\2518h\356\2549\310\262A\272\017\324\272\271Y\323\237\271W\304\006\271\261\221y:X[\033:~\233z\270A\320.:\350=\2438+\204\\\271\231\214\331\270\260\231\024:h\306\201:\223\350\020\272\213\347\017\272|\271\366\272TuV:8\265u\271\037\276\271\271eL\343\272\020n\377\270\2141\215\270@\211\2529%\344\255:!r\332\272\375h\006\272V\213):\316\330\035:+V\223\270\227T\226:\311\363\010:\231\213\013\272T\331E\272;z\3649\326X\3456a\002B9F\233\252:7\277[\271DQ\306\271\212\013\021:\343\336\262\271\010\2167\2722\007=:6b\2229i\\+7yr\356\271i\357\3779\177VK:|\037L97\026\3318\254\354J:\202j\277\271\324\231\307\271\301\345\034\270\264\346\236\271q\352h:\213x\266:Q\345\273:\023\317\3249&\200\007\272%\276\222\272\255#\'\272\027\225)\272\343\306\0209W\266\2769\004\327*\271\203\246<\2721.>:\215K\331\271X_\2459\'\242$7\300^\260\2715\r\030\272|\314\2257>\374D:\001\353\201\271dZT9\260\033]\271j!\2448\372D[\272P\302\213\272\321\220\377\271\036S\n:\003\207\271:\333\353`\272F3\374\271\225\237\212\2725\204\2459tg\3669\212\270=9\347\326/\272cx\037\271p\273\204\271\355\225,:\277\226A7\361B\3328\370\202\224\271\264k\3779\r\026b:\210?\013:\036\241=8KZ\3719U\341d:\271nI:\255a\2139\324)(\271_\261\302\271z\014\205:\007\344\320\271}\025\2219\321o\3539\227\255\005:\000\017\234\2701\324{:\221\005P: \2274\272\303*\2259\256\300{:\366\006\016\271\355\221}:\357\211\2139`a\2359s\026 \272J\243!\272\210P<:j\021b\271\342\026\312:\024\037Y\271\037\221\266\267\306D\325:\237+ 7\207XN\272B\261*:.\220:\272\245eF\271>\'\2059\213\363\014:\2162\305\272~6\235\2701\3311\272u\225\002:H\0223:\372\224%:\330\252\t9\355\307\342\271\305\323\263\270EF}:\371SU\271\247\231\357\271UH\272\270-\327\037:hZ\3748o\217+\272\2568p\271ev)9\220\213\017\272\343\372e:\240NK9A-\203:\003D\305\271R[D9\033nH\2722\273\t9\354\374\003::\024\036\271\0331\014\272\0163\004\272\010\336G8$\215Q\272\361\252\226\270\251\240=:\310\206\300\271\347d\027:\206b1:m:\'\267\246\230\006\272\333\266\216\272\257Xx\272G\207@:w\261X\272OK\016:\250\201O\272\217=c\272\227:\246\271\2047{\272\237,\330\271\323@\347\271\346\221\2079\371\306q9q\374\220\271\231f\016\271\005\377\3367\0331\3529[\211\266\271\\\333\317\271}9Z:\350\032i8\004\325\215:>\265\2139\207gb9\202|\3379\202\232\32592\262\2169$\"\177\272VG\3558U\004\210\272<\372%\271\310+.:&}G:\000a\205\272\215,N\271\356\206\202\272\340\237\3009\035\022)\271\306\316\20295\200-\271S\324\252\271\030\225\'\272s\033\2659\266c\3608\256\250\006:k\231\220:hBD:\005\317\027\272C\370\2229\035+\2408Q\337\"\271\345\224{\270\037W\212\271\005s\316\267\323\206\217\272`T!:\307t\3339@\321G\272\353\310\202\271\355\363\025:o\\\222\271\214GK\272\030\303_9\235\244\355\271\270yr:\23250\271KX\2118\311\204m:o\250\262\271(k\":Uit\272\312Q\3529\"\020\2109\020O(\272.0\340\271\205Z\321\271\216=\2729|\371\2209\354\325\2549O\217-\272\310>l9\236\372B:\340\310\2509Yv\257\271v\331\004\271\234H?:\241\033\222\271\027&[94e>:\032\177)\272\240\203\3409\340\315\352\271\254\242\2439\364\207p:Z\202\037:v\344 :\016\202\205\272F\357\242\271#C#\272}\317l8\212\351\3329>\035\252\271\367F\252:\230n\313\271\236g\032\271g\200N:\303\207\036:\252;\243\271C\006G\272p\247P9\360<\036:i\336Y:\"\351H\272\226FS8\030\30049\357\320\301:r\212\2319}H\216:\372\034\337\271(\342\3459_pW:\002\037\r:\263\337\306\271\010\261*:\210\367\2679\302\037\230\271\351\276H9\300\356\260\271(y\3749P\021\013\272;~\366\267\255\017\231:Kz\37795\033\2059\327E_\272D7P\272\241\342M\271t\333::\003\260\254\271\370\265\n\272\306\201\200:\354\364\3268\2446\236\270\304\216\251\271\030\270\256\270|\0374\272\315\312\234\272h(U:\213\000>:\346h\021\272\320y\334\267\332\311\2169\223\270\001\272\224e\2709\335\256f\272\010\341\023::\216e\271\331\333\2538M\177\026\272:\\\0308\\VP:Xp\271\270l\250\203\271P\'\023\272\323\256\2059-OP9u\355\221:\343\353I:\363\266\240\271\005\305\274\271\036\324\222\271\236\324-:e\234m:\375\304\36793\361\302:\300o\243\270\220\'\3309\231*\2509\213\257\227\272@\264\3459n\3131\271\025|\221\272\337{\3729c\275\3519c779\022\375\2079XL\033\272\352b_\272\361o\2629\372a2\272\\\"\211\271\313\334.9\237Y\t:r\273\206\272>\260[\272\031\327|\272c\247\341\270\033\307N9{4\230\271\210\003\014\272\365\360~9\316\243\240\270\377h\200\271\246\321x\272\311T\2749$\260A\271\223\327,\271\356\303\242\272Q\204z\271\224\361|8\325\010+:3d\2229\360Jw\270\013\345D\271B\n\202\272I\217\220\272f\00079\217\356b9\321\366@:2\240::@\244M:\365\274=\272\212Y9\271\303)\251:G\376\3549\231\252+9\356.\2219E\362\0179Dj\314\271\267\335S:\251\212\025:z\344\035\272`h\225:@\264\3019\235\032\022\272\332\004\255\270\365Y\2149\\\302283D\356\271Ne\251\271\333x\t:\346\356(:`Wz9\223\257\2678X\275>\272\177q2:\nz\221\272\237\026):f\244\026\272\254\32208L\202\2559\016V\220\271+=\276:\251\212U\272F\304\177:\241\301&:\225\324.\271\375\377w:\t\247\207:\177Na:\327\332\355\271\330\354-\272\240\232\216\271\201\032\3628\362\302\321\270+\316U\271o\314\230\271\332I\241\271\267\013\3539\221\253j\271$\305\0108KR\017:\302\313\003\272\267\366\3509\305\334\233\267\206s\2629\000s8\270\234f\241\272\004iV9\357Wt:4\025i\272:\310+\271\004Un\270A\244\212\271?\231\216:\274\203\214\272A\373\2718\202\346n:\250\271\2028\376\202\036\272\255\332\2349_\324P9H\005\031\272\330\251\3529\350L\2338[\033\305\271\270\355\273\271\\t\037\271\305\367\302\271\360\030B\272\320I\000\272x\336N:\241\364&\271\026\350\004\272\016\203P\272\231X7:w\367\3568\204\364\032\272\374\004\0068\344U\247\271\227\243\236\271\342\353\362\270\230S.\270\017\363!\272Q\t\0319\016\326`\272\255\241\n\270\204\364\214\272\222iM:\313\212\013\272>\021S\271\267n<9\234\372\3227b\364Z8\374\352\363:k\345\270\272\177\245\377\271B\354\n\271\202\342\034:\t-\321\271U\324\374\271}\021\204:hc\345\271\311{A\271\014o`\272\326}\337\2710e\212\271G\265\023\272\271I\035\270\374\313S9{\226G9\354\333\341\271\374\242`\271\330-\371\271/\266\335\271\301k\33392\222\323\271\331\230w9o\211\216\271\021\303\034:\377^;\272\243Dp:V\021\222:}U\010\270\350\320P:\3652\351\271v\300\'\271:\013h8\252Z\244\271\033\242\236:\376\342W:R\374\022:nXx9,W\2629\230\302\327\271{\'\3758\177\247\2419\363%\367\267_\340\3579Y\262\341\271\214\010\010\271\247\232\017\272<\271k9\352\266\320\271(^\207\272\316w\214:\006;J8\0132Z:\234L\032\272\226\312\3129\347\030\"9[P(\272]\211p:\231\023\263\271:\322\250\272\356\330V:\316\361\':\326\215\3157\212G\031\272A[\2269}\233\213:\255\3476\271\355\034\274\271rr\201\272\n\227\3529\177\374\376\271\222\305\3749_\'\2108~\3433:\3442F\271A\316.\272\266\307\200\270\366\032\0139bmJ:\341\267\001:\005\253:9Z:\214:c\014\355\271\332\202\210:\326|-\271\262\2439\271\332\305\2439i>\232\271t\253\005:\325\002\3109y`\2729\010\357\3769V8\3409,;\2619\024\t\366\271\305\315#\272.\344\370\271\217,\240:.z\325\271(\374\221:\3426\004:qu1\271UO`\271\241\n\323\270\207K&\272\2046\2449\327\026\0239\300|\3329yy\206\272\337\021\31694\354\351\271\274H\211\271\010\256\323\271\3251Y\271|J\304:u\326N\272h\335\203\272\362\330\021\272\207.!\271g\355\3019p\223r\271\271\270\215\271\323\037\360\271\253\247\036:Ju\302\271%\251\261\271\321Q%\272K\365\217\271o\200\215\271\235\221\2118c\334\2517\203\211(9\207;\3229J\373\220\272\261y\2559\357\003\232\270\2712\231\272\227\202\036\271\332\370\2469}\277\3367\244U\345\271J\234\2049\330\262=:\302\265\304:\245\317\025:H\320\325\271\302,\210\271op\2217\206\334\373\271V\306\323\271V\366\224\271z\356\007\272\315\020\265\272\274D+\272\023mu\272\210\021\035\272IH\3759\230\277{97\371\313\271g\317\263\272C\313\326\267]\263J8\270[\032\271\207\223\0079[Lh\270U\t\200:\177w\2427[-5\272\322x\207\272\265\242$\271\367\225G9\323\205\002:\"W\256\270Y`R\272$sF\272t\334\3039~+u9\240\"\202:X\316!\272\014(\3579\352\222\2409B7\013\271\227P\\:\3543\231:&G\355\270&\361~\272\'n\2129\335\327\255\271_\250\00788VS8\177\335\204\271r-W\272 \351\267\271\207m\34383t\3328\037\373\242:\234\n.:\323+\2429\251\320\2128;\343\030:\352dZ:r<\'9e\207\2727\'.\03684\333\017\272\301\270\026\272E\335\3759\325y\3717\021\333\244:_\337\3509\266\354\2369,r\3279\272\n@:\370\374\207\270\225\314<:\200\243\3269\334K\277\271\t\215\234\271\302\'A\272\310V\2179)\303\2419D\007\0049\014\242\253:\311\225\004\271\365\254\340\271\r\263\265\271\370`W\272\005\236\032\272@\325G:\260?\3409/6\227\272\375\036\223:Wh\211:\362\207\2409\027\224g9\3451\232:\306\360<9\227V\013:@{\3039\266\362\2719l*\2766\223]!:+\020&\272\204\252&:\000\362\336\271\264\221\262\271\272\263\201:\370\201i9z\335\21383\315%\270-\230\207\270j\364\007\2724\022\270\266\037\333\206\272\203\305\2159)\037\013:/\315\2229\006\236\226\272\363\341\222\272\241\3714:\\\031\217\271m\326\3019\026#\372\271G\243\3219h\032\221::W\t\272\361\317692\203\2729\322`>9\331\026\265\271\214\24779\237\302\210:h\010D:\225\014c9\341\234\240\272\266\354\001:\311\243\262\271\313F\201\271\376r\344\271H\013\006:\271\336\300\266\363Q\007\272\341\245\014:Y\311\333\271\344\006l\271\313\234\224\272m\323\3479I\304z\272\301\261\3519lkV:\330n\027\271\303_\2259\023\235U\272y\272,\272\025*`9\335\226\004:r\367\32592\362\2629%FG:,t#\271\336Dh8\020\345\3029\353?\2609\252\216h\272\277\336\2239|\225\3319\037]\t:1\016\2429p(\3069\247)\252:\315n\205\272\241/\255\271\037\001\265\270\253\243H\272\346\210\01094J\255\271\025\302N\271\276\246\2748\341\2345\272\023\322\2728\255\310\333:\347[p:\277\026l\272\327Y\202\272\236\335\225\272\301DS:\375\027\204:/\203\004\272\277f\3119\027\365^:2\310\2779q\234\305\271(]p\271\247#\320\270\202_<9\237\272.9\300\230S\272\223\233\2439\357\347t\272\360\\\"\272\006\255\373\271\010\360R\267\343=\0009\013\356\016\271\207\373\3638\3646\003\272\246\306U:\2664 9\233\n\230\272G\25159x\331\010\272\027\376Q\272\000\264\2639\222\236\2069\264\366\217:\361\341\201\272\244\231\2339\277\301\355\271\276hS7\240\311\0239\036r\207:\020\306J9\253P\320\271\306\217J:1G\0319n\200X:+\327\273\267\226\\L\271\344+\030\272@\375\240\272\350\32249\017\022\3169\351jO\271\222%\263\270\211\375\304\271\rlI:&\266\3468\014g\001\272\001\256m\271\274\350\2209\301\005\006\271<I\275\270\006C-:X\017\225\272\245.\245\272\327\252\030\272<\320\252\271\253@\2619,m\202\272\272\327K:\275\342\004\272\220\201\':E\027\337\271\271\007\2069;\257@:<q\260\271b\303\2319+\206\237\272\345\202\2228h\315\0059/\007\357\271\236\241\2239]t\225\270_\266\014\272\302\360\220\271,\342\262:\364,\t\272X\263\217\270\242\377w\272\214\327\3219$\267/\271\000\210\021\272\377?\003\271,a\030:\252\032\307\271\367\325]\272\305\222*\271\034V\274\270\223tY\270\210L\212:\202\021h\271F\217\022\272.\260\0328\333|C:\234c\336\267\352w\204\272:g\2179\251}Q:\266\237\027\272\253\272\273\267\375\250$:\201\023J\271\335\030\0229[y\2379\245\332\234\272\002\324B9Q\021\321\271K\266\201:\261\203;\272C\002\370\2717\220\2479\327\035\035\272\2607|\271N!\323\271=\242\'\267\3759\233\272\000\246\3509Fu\2339x>\0209\331\305\2619\372]\000:\306\337G9\264$\004\271\244\276\r8\312 B\271\354\375\3539\027QX\271\271\001(:\235V\031\271l\373F\271\324}\024\272\366\311R\2723\324\222:\223\376\2439I\020P\272\375!\241\270Tj\244\271\276IL9\267\251\006\272/R\336\271r\\\217\272\201[\'\272\330\201\3678F\325\344\271\250\264%:\300\377\247\270\261\000\022:\327w6:R\200\3159ER\364\271\2114E\272\371\362\222\272t\316\352\271\0219\2277>\253\222\271\247\311\037\272\306\355\210\271\237E\233:r\032\3459>\341C:\016\247y8\200[\236\272e\020\310\271\326\037;9\352\355\322\271\357Z\226\272\021\205\366\267\337O\203:\014\274C9\322_\366\271W\303\216\270\346]\026\267!)\2538\213b\377\267;[\036:jl\240\271+\363\200:v40\272\334Nc9\rsD:\314\310V9jJ\365\271\301\021\037:j\265\2119\25452\272\266\0202\272\371\257&:r\215\2519\215\'\3168\226\304&\272\333kp9_p\3209\321J\020\272\237\305y9U\352\200:\332\322\255:L\263\3379Ov\337\267x>c\271\025z!\272\333\244\2519\254\213\005\272\024\271\253\271D\342+\272\030H_9\370\370k\271\033=J:x4\":Q\375\220\271\310 `\271\347\234\230\272\254\206\":\246s\3409B\337T8sD\365\271\376x\2349\021\217@:\211\274x8\332\343:\272\363\321\3029^\301\000\272\006\313\3027R\231\3459\276\350>9[P\036:\226\004\340\271,\267$9\336\004\027:s\364\204\270)Q\2069\365\214:\272\235\202\262\267t\235X\27279\250\271 \220m:\270i\211\272hV\352\270M\374A\272e\253<\272\0312q\272as,\272V4\016:rU\0329QPa\272r\270\225\271\305eW:D\254@\272\375E[\272\305%\201\271\317t\032:\331!\3768\033q\3039&/*\272\351\330\200:4Q\256:\307Z5\271\347\256\2059u\265):\216/\201:Qls7R\324D\272i\242\2178>\367\205\272\275\225\2059\301\233\235:>z\004:\\l\013:\247\30389\371\200\353\271\202\341\221\2712\344\214\271\263o^\272\370\330\271\271Q\272\000\270Y\265\370\270\340\262\3579\\\3524\272,p\000\272!\374$\272GR\273\270\014\200\332\271\315\202\307\272_\210\022\270Lh\237:\244\253\223\270}x\262\272\001\332<:\n\317\212:\277\376/\272\273\322\200:O\323\237\272\366\306\2559{J\2129\024\350e9\373\251\212:G\215\271\271\361\277E\272\220{\213\272\240\263\204:\340E\2539\345\373A9\324\0301\272\317\333\0366Z\304\021\272kO\366\271\362pD9\224\350\2059\261\362j9s\037\014:5~B:\027\210=:\014\377\227\272YoJ\271\332V\2618{f\007\272\366\256K\271\371%\013:\226\0211\272\272\367\'\272J\367\3469{\211)84N\223\271\nuY\272#(\020:\232n\006\272\204\312\0048\276\262\216:[\254-:)0\2149.\330\312\270\315\'v:\357\006\253\271\307v\245\271j\002\t9D^A:\032\345\360\271~>5\2712\036b\271\311\034\315:\350t!:\177L\224\271I\215F:\255\030(:\335\325\357\271;\335\244\272\377AU:\010\312\2039WK\327\271f\361O9\337$\214:!\347\270\271!\030\3129mVq\270\267oc\270\223;\032:\275Jj\272\317\027Z8\317\026\021\272\304\211\177\271\201U9\271\240\305\2259\364@\3468\300\023\027\272\340\02659\275X\366\271]\346p:\305\326\220\271\014\316N\272@\335\212\271J\333\021\270\345\256\351\270xf\373\2702\201\253:\020\223\n9\375\013\3719\363k[\271\217\210F8U\302\215\271\362cm9\014N\023\271\016\240\030:\203:\310\272\332\014<\272y\217\305\271<\371\250:~;\357\271\341b\3049\236\007\326\271\211\023\332\271\252\326\362\271\023\002\032:Q\252m9\027\234|\2726\376\250:\3215\225\271v[\252\270\337Ae9\371\ty\271\250)\004\272\373A\026\272\001\305\225:\327f0:{\233P\272O\244\233:\215]09\317u\2209n\370\0369&\3616\272\361\026<9Uf\3649\313/\215:\333\325\3129\213\232\2149nO\2208\032\345\35698\264.\271\362\363\253\272\240\276\013:E\253\326:\032v\007\272|w\313: \315\322\271\234\345\275\271`Ez:\320Q\2418\212\005\206\272\335g\010:\274\324\3269\234\\\341\271\367wd\270pTx\270\273\261\001:U\211\026:\262\213\2029\257t\210\272\366v\2469Y\333a:\236\325\2059\342\310~9\267\370J:\2576U:\\>\217\271\037\301\3729\302@\3669\233\232\010\272\243V\017:9\321b\272\177\321\026\271\005\304\n:e>\241:Z\r\363\272Z\021\334\270\035\024\032\272\3544\221\271\331oP8\tD\3409\376\215\237\271.\n\014\272\024\t\014:\032\013?\271\r\232=\271\3243\223\272\205\370O:\'\310\220:d\022\373\271H\244+\271\224\344b\272\342\203\2149\372\330J\272\003\246\332\271J\251\006:U\002\327\272M\rk\271\006\304\355\271$\320x:%\357z8\227\020C:\237\375\2019\251\327\366\271Q\203!:6-\r\272~5M\272\216NA\272f\347\332\271\305\332\2359\365\242>\271\260\345}\271*U;\271\255\270\2269\034W\201\267,aE:\353\257\257:\255\321+\270\037\220\030\272^{p9]\317\007:Ua\22379\216\006:<\261e\272\224y\203:\200\202\220\271\3059\202:\302\267\230\272\030\231!\2717#\333\272\240\324\207:\177\361\2229\225\336\216\272\374\332\370\271\341W+9DI`\272\'\373M\271Z\221S\270\256\221493\254\3678\262\271\004:\027\000\3458$\353\0037\347\322\020:\024]\014:\345\260h\271\305e\345\272\351\301\023\272\327\217\214:\346I!:xk\n:1\243!\272\021s\247:\013Z\354\271w\013\356\2713\213P\271\244o\245\272\363\335\305\271-\350\321\271:M\231\272\231\314\212:\337\033L\272x\362\235\272\211\300\2738\016\rb9\352e\370\272\321\227\3769{j\3039\'\027\3749\377$R9\200JB:\354\252\211\272\t\360\036\272%~d\272Dc_9`0]9\325|59q\366\3269\033\2230\272#\372-\270\335\317\037\272\237\316\221\272-+\2148>\275\353\271?\266k\272\\:V\271\310=l:B1\332\271\207<)\272\265^\030:|\021\377\270\025\024g\271j6\3479N\177\307\271\223\246o:\222\321\314\2710\240\2009\310e\235\272)\230\251\272f\303\226\272\312\311\2739?CI\272\320\241\271\271\321B\201\272\274\246\3479\224\233\036\2718\336\2239@\\M:[P\221:!c*9{\301\245\271\024\363\2249\033\304[\272\"I\025:N\313\210:\220\342\2709/zo9rt\271\271?\215\\\272\312\200\r9\276NG\271\207\354\306\270\273\317r\272\203\026\251:\217\377C\271\375\270*:]\"K:o\245\351\271\250w\025:x\374\033:/\314,:^\206\315\271!l\202\272\320\275\027\272X\204\\:}^\n8\372\363\240\271\317\200\2679\253\262\30599\236\205\271Z]\240\270K\327\213\272q\225|8ms\277\271\314\271z9=;z\272\271\327\260\271\254\255f\272t\317\010\272\366\360\201\271\023\304\363\271\371\224\335\270\274b\304\271S}8\271{\005\230:\001B\246\272-\t\3478x#n\271\0304\351\270\245\224f9\3163\002\272\223\246\360\271\245\272\317\271\"\253\034:\2542M\272\032\n\037\272D\360\376\271\2301\2669\241\003\2208\267B\365:\224_N:\347\306U:_\260&\272\222\270\356\270\t\365\202\272w\302\300\271b\333\227\267\025\351\312\271\253\311\267\272\226\005\261\271|\010g\272\351>\034:]\242g\272\213\346\":9\242\250\271\225\036~\271KEg\271+\027H\2717\301\243\272\331\205\2769\221O\025\272\244\332!9EC\374\267,\014\023::\377\017\272a\361u9\362\344\3737@\256\367\270\214m\216:\361\242\203:\005\233X:\\V\232\272y\315\3439\313\002\007\270\316\362\2629<\211\376\271k6\230\270\202hz\271\313\216\257\270\216\243::\311\256\221\272\363\236.9&\361\201\272\307\372\2669\277\"\257\270?\375?\272\000a\213\271@\222\000;N\256l\271\353\006\2679"
      }
    }
  }
}
node {
  name: "global/action/w/Assign"
  op: "Assign"
  input: "global/action/w"
  input: "global/action/w/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/w/read"
  op: "Identity"
  input: "global/action/w"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "global/action/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/action/b/Assign"
  op: "Assign"
  input: "global/action/b"
  input: "global/action/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/b/read"
  op: "Identity"
  input: "global/action/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "global/MatMul"
  op: "MatMul"
  input: "global/Reshape_1"
  input: "global/action/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/add"
  op: "Add"
  input: "global/MatMul"
  input: "global/action/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "global/value/w"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/w/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\240`Q\274\032\003\262=\345\303Q=y\234\321\274\201\001\007\276\332\333\244\275,\256\031\2760\356\241\275\333C|\274\212+\330<V\014\333<f\027\234<\010\367\242\274\242\302G\275}\340\'=\317!\315\275m\020\240\273\204\243\220\274\217X$=\374\002(=bE\343=\375\327\033>\010\366\004\276\2071\007>\'i\010=\227\240\001\273e\206\254\275\032\007\241\275Q\000\227=|\005G\273\004%\321\275V\314\'=\245\027\222=\335J\263=\312\307\003=\260{\216\275\034\344\004=L\201x=\021\313\032\275\375\324\\\275}L\010<\310<C<lw\276=!7\020\275\327\233\346\275y\021e9\346{7\274\357\366,;q\274\361=/\033\363<\302\241a=V\347\207<\310\r\014\275\356_\341\274)8[\275z\352\252\275u\'M\273)\037l\275\341\356\236<\274>\300\275\320\341s\275w\303\002\276\247v\032\274\311X+=\021a\377\275\217\235\306\274\200]\235\275|)\250\275y1\006=\322*\336\275\312\r\021=u\353\224;.2\227=\354\327A=\270\032\005=)\373a=\203\277G=\265L\211<\034\032X\275\3324\202=>\202\342;\242\263\363\274\0336\340\274K\370-=es\353\275Y`\303<\360\376M=\366\007\231=sY]\2758\266A\274\363\375\211\275\300;\221\275\006\341\017\274\242B\227\275f\215\t\276\005H~=\243\366\313=\024\261\241\275\311\000\345\274\242\370\350:/\205\017=\243\256\307;\210\340\212=\304\242\332=9\251X<\020Y\000=\233\247L=$\357\214<\003\306\275=\372\002\241=C\273\247;\355\2221=\317\224*\274q\004Z=\227\234{\275\'a\374\275\316\353C=Xnp=R\203K=-\273M=?\376`\275\007hZ\275E(\252=-\213\031=:\256\003=Y\364\231\275N\213\323:\207>\010\274?\3346\275\264\016\334\273\t\2212\275Z\242\224\274q\341\013\275\003\004\022=\327\236\302=L\024\223\275\003\2505\275\006\311\345\274\314\177\025\275#\320\353<}\303i\275\276\203S\275\257=\237\274\374\000\005<\277\233\016=\306\233y\275\266c+=\274\271\260;\253\r\240\275\266\357\375\275\'\036\034\275{3\255\275\336n~\275\242?\230;xA\t=f \257\272@\213\334=\325W\006\274vC\306\273\363\303\222<9\271\034\275\264\035\206\275\023x\310<I\224\235=7CN\2752\331.\275\177\336\003=/\350\025\275Mo|\275\205F\235=\361\342W\275@\376\251\275wA\277<\210\202\252\274\177E+=C\235\204=L\375}\274u5\257=4\253\375\274\010N\256=\220S\360=Z8R\275\322\177[;\332\355\206:\003\020\266\274w\301\222=\234L\372=\235\357\320; \205\033<\206\006\000\275HyW=\311(\304=l\272\357\274\352}\233\2758\017\363\273\223\302y\274\221\354\215\275IY\232\275\225\317\300=W\224\037=%\216\366\275\230\024P=\232\234\363==3\202\275\'\257\244\275}\3342=-\226%\273[\354\200\275\206|\237\275\004\0249<\330\212a\274\314\346K\275\265\2457\275\345\024\334<\227\177Y\275\256H\020\273&p\256=Q\305\007\273\036w\252=\004\033\233\275\025\263\244=\372J\004\275\316\237\332\275\337_@=\2515Z\272\243\017\246\27526\302=\211\342\335\273\216\037\255<.^T=\202V\270<\'\311\334\275\262D\005=\316\313\261\275\006\344t\275\036\306\270\273\325=\321=\255tK=\217\317V\275\243|X=w\324\242\275kr\373\275r\206J=\030\262\207<]]\307<g\247h=\303\372\267;(\033\216=u\361\213=_%\017\276\335K\301\275\025A\310<EDI\275\305&T\275\\\264{<t|\305\274"
      }
    }
  }
}
node {
  name: "global/value/w/Assign"
  op: "Assign"
  input: "global/value/w"
  input: "global/value/w/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/w/read"
  op: "Identity"
  input: "global/value/w"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/value/b"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/b/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/value/b/Assign"
  op: "Assign"
  input: "global/value/b"
  input: "global/value/b/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/b/read"
  op: "Identity"
  input: "global/value/b"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/MatMul_1"
  op: "MatMul"
  input: "global/Reshape_1"
  input: "global/value/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/add_1"
  op: "Add"
  input: "global/MatMul_1"
  input: "global/value/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape_2/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/Reshape_2"
  op: "Reshape"
  input: "global/add_1"
  input: "global/Reshape_2/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1"
  op: "StridedSlice"
  input: "global/RNN/while/Exit_2"
  input: "global/strided_slice_1/stack"
  input: "global/strided_slice_1/stack_1"
  input: "global/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2"
  op: "StridedSlice"
  input: "global/RNN/while/Exit_3"
  input: "global/strided_slice_2/stack"
  input: "global/strided_slice_2/stack_1"
  input: "global/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Max/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/Max"
  op: "Max"
  input: "global/add"
  input: "global/Max/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "global/sub"
  op: "Sub"
  input: "global/add"
  input: "global/Max"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "global/multinomial/Multinomial/num_samples"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/multinomial/Multinomial"
  op: "Multinomial"
  input: "global/sub"
  input: "global/multinomial/Multinomial/num_samples"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Squeeze"
  op: "Squeeze"
  input: "global/multinomial/Multinomial"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "global/one_hot/on_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/one_hot/off_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/one_hot/depth"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "global/one_hot"
  op: "OneHot"
  input: "global/Squeeze"
  input: "global/one_hot/depth"
  input: "global/one_hot/on_value"
  input: "global/one_hot/off_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "global/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3"
  op: "StridedSlice"
  input: "global/one_hot"
  input: "global/strided_slice_3/stack"
  input: "global/strided_slice_3/stack_1"
  input: "global/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/global_step"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/global_step/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/global_step/Assign"
  op: "Assign"
  input: "global/global_step"
  input: "global/global_step/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/global_step/read"
  op: "Identity"
  input: "global/global_step"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/Placeholder"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "local/l1/W"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/l1/W/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/l1/W/Initializer/random_uniform/max"
  input: "local/l1/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/l1/W/Initializer/random_uniform/RandomUniform"
  input: "local/l1/W/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l1/W/Initializer/random_uniform"
  op: "Add"
  input: "local/l1/W/Initializer/random_uniform/mul"
  input: "local/l1/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l1/W/Assign"
  op: "Assign"
  input: "local/l1/W"
  input: "local/l1/W/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l1/W/read"
  op: "Identity"
  input: "local/l1/W"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l1/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l1/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/l1/b/Assign"
  op: "Assign"
  input: "local/l1/b"
  input: "local/l1/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l1/b/read"
  op: "Identity"
  input: "local/l1/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l1/Conv2D"
  op: "Conv2D"
  input: "local/Placeholder"
  input: "local/l1/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/l1/add"
  op: "Add"
  input: "local/l1/Conv2D"
  input: "local/l1/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Elu"
  op: "Elu"
  input: "local/l1/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l2/W"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/l2/W/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/l2/W/Initializer/random_uniform/max"
  input: "local/l2/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/l2/W/Initializer/random_uniform/RandomUniform"
  input: "local/l2/W/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l2/W/Initializer/random_uniform"
  op: "Add"
  input: "local/l2/W/Initializer/random_uniform/mul"
  input: "local/l2/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l2/W/Assign"
  op: "Assign"
  input: "local/l2/W"
  input: "local/l2/W/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l2/W/read"
  op: "Identity"
  input: "local/l2/W"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l2/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l2/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/l2/b/Assign"
  op: "Assign"
  input: "local/l2/b"
  input: "local/l2/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l2/b/read"
  op: "Identity"
  input: "local/l2/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l2/Conv2D"
  op: "Conv2D"
  input: "local/Elu"
  input: "local/l2/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/l2/add"
  op: "Add"
  input: "local/l2/Conv2D"
  input: "local/l2/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Elu_1"
  op: "Elu"
  input: "local/l2/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l3/W"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/l3/W/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/l3/W/Initializer/random_uniform/max"
  input: "local/l3/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/l3/W/Initializer/random_uniform/RandomUniform"
  input: "local/l3/W/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l3/W/Initializer/random_uniform"
  op: "Add"
  input: "local/l3/W/Initializer/random_uniform/mul"
  input: "local/l3/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l3/W/Assign"
  op: "Assign"
  input: "local/l3/W"
  input: "local/l3/W/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l3/W/read"
  op: "Identity"
  input: "local/l3/W"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l3/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l3/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/l3/b/Assign"
  op: "Assign"
  input: "local/l3/b"
  input: "local/l3/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l3/b/read"
  op: "Identity"
  input: "local/l3/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l3/Conv2D"
  op: "Conv2D"
  input: "local/Elu_1"
  input: "local/l3/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/l3/add"
  op: "Add"
  input: "local/l3/Conv2D"
  input: "local/l3/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Elu_2"
  op: "Elu"
  input: "local/l3/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l4/W"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/l4/W/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/l4/W/Initializer/random_uniform/max"
  input: "local/l4/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/l4/W/Initializer/random_uniform/RandomUniform"
  input: "local/l4/W/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l4/W/Initializer/random_uniform"
  op: "Add"
  input: "local/l4/W/Initializer/random_uniform/mul"
  input: "local/l4/W/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l4/W/Assign"
  op: "Assign"
  input: "local/l4/W"
  input: "local/l4/W/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l4/W/read"
  op: "Identity"
  input: "local/l4/W"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l4/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/l4/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/l4/b/Assign"
  op: "Assign"
  input: "local/l4/b"
  input: "local/l4/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/l4/b/read"
  op: "Identity"
  input: "local/l4/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/l4/Conv2D"
  op: "Conv2D"
  input: "local/Elu_2"
  input: "local/l4/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/l4/add"
  op: "Add"
  input: "local/l4/Conv2D"
  input: "local/l4/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Elu_3"
  op: "Elu"
  input: "local/l4/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\r\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape"
  op: "Reshape"
  input: "local/Elu_3"
  input: "local/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/ExpandDims"
  op: "ExpandDims"
  input: "local/Reshape"
  input: "local/ExpandDims/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "local/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice"
  op: "StridedSlice"
  input: "local/Shape"
  input: "local/strided_slice/stack"
  input: "local/strided_slice/stack_1"
  input: "local/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Placeholder_1"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/Placeholder_2"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/transpose"
  op: "Transpose"
  input: "local/ExpandDims"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "local/sequence_length"
  op: "Identity"
  input: "local/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/Shape"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/RNN/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice"
  op: "StridedSlice"
  input: "local/RNN/Shape"
  input: "local/RNN/strided_slice/stack"
  input: "local/RNN/strided_slice/stack_1"
  input: "local/RNN/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/RNN/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "local/RNN/Shape"
  input: "local/RNN/strided_slice_1/stack"
  input: "local/RNN/strided_slice_1/stack_1"
  input: "local/RNN/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/RNN/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/pack"
  op: "Pack"
  input: "local/RNN/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/RNN/Equal"
  op: "Equal"
  input: "local/RNN/Shape_1"
  input: "local/RNN/pack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/All"
  op: "All"
  input: "local/RNN/Equal"
  input: "local/RNN/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/RNN/Assert/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/RNN/Assert/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/RNN/Assert/Assert/data_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/RNN/Assert/Assert/data_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/RNN/Assert/Assert"
  op: "Assert"
  input: "local/RNN/All"
  input: "local/RNN/Assert/Assert/data_0"
  input: "local/RNN/pack"
  input: "local/RNN/Assert/Assert/data_2"
  input: "local/RNN/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "local/RNN/CheckSeqLen"
  op: "Identity"
  input: "local/sequence_length"
  input: "^local/RNN/Assert/Assert"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/Shape_2"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/RNN/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "local/RNN/Shape_2"
  input: "local/RNN/strided_slice_2/stack"
  input: "local/RNN/strided_slice_2/stack_1"
  input: "local/RNN/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/RNN/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/strided_slice_3"
  op: "StridedSlice"
  input: "local/RNN/Shape_2"
  input: "local/RNN/strided_slice_3/stack"
  input: "local/RNN/strided_slice_3/stack_1"
  input: "local/RNN/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/RNN/pack_1/1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "local/RNN/pack_1"
  op: "Pack"
  input: "local/RNN/strided_slice_3"
  input: "local/RNN/pack_1/1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/RNN/zeros/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/zeros"
  op: "Fill"
  input: "local/RNN/pack_1"
  input: "local/RNN/zeros/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/Min"
  op: "Min"
  input: "local/RNN/CheckSeqLen"
  input: "local/RNN/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/RNN/Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/Max"
  op: "Max"
  input: "local/RNN/CheckSeqLen"
  input: "local/RNN/Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/RNN/time"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArray"
  op: "TensorArrayV2"
  input: "local/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/RNN/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "local/RNN/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArray_1"
  op: "TensorArrayV2"
  input: "local/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/RNN/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "local/RNN/TensorArray_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/Shape"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/strided_slice"
  op: "StridedSlice"
  input: "local/RNN/TensorArrayPack/Shape"
  input: "local/RNN/TensorArrayPack/strided_slice/stack"
  input: "local/RNN/TensorArrayPack/strided_slice/stack_1"
  input: "local/RNN/TensorArrayPack/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/range"
  op: "Range"
  input: "local/RNN/TensorArrayPack/range/start"
  input: "local/RNN/TensorArrayPack/strided_slice"
  input: "local/RNN/TensorArrayPack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/TensorArrayScatterV2"
  op: "TensorArrayScatterV2"
  input: "local/RNN/TensorArray_1"
  input: "local/RNN/TensorArrayPack/range"
  input: "local/transpose"
  input: "local/RNN/TensorArray_1/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/while/Enter"
  op: "Enter"
  input: "local/RNN/time"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Enter_1"
  op: "Enter"
  input: "local/RNN/TensorArray/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Enter_2"
  op: "Enter"
  input: "local/Placeholder_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Enter_3"
  op: "Enter"
  input: "local/Placeholder_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Merge"
  op: "Merge"
  input: "local/RNN/while/Enter"
  input: "local/RNN/while/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Merge_1"
  op: "Merge"
  input: "local/RNN/while/Enter_1"
  input: "local/RNN/while/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Merge_2"
  op: "Merge"
  input: "local/RNN/while/Enter_2"
  input: "local/RNN/while/NextIteration_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Merge_3"
  op: "Merge"
  input: "local/RNN/while/Enter_3"
  input: "local/RNN/while/NextIteration_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Less/Enter"
  op: "Enter"
  input: "local/RNN/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Less"
  op: "Less"
  input: "local/RNN/while/Merge"
  input: "local/RNN/while/Less/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/LoopCond"
  op: "LoopCond"
  input: "local/RNN/while/Less"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Switch"
  op: "Switch"
  input: "local/RNN/while/Merge"
  input: "local/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Switch_1"
  op: "Switch"
  input: "local/RNN/while/Merge_1"
  input: "local/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Switch_2"
  op: "Switch"
  input: "local/RNN/while/Merge_2"
  input: "local/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Switch_3"
  op: "Switch"
  input: "local/RNN/while/Merge_3"
  input: "local/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Identity"
  op: "Identity"
  input: "local/RNN/while/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Identity_1"
  op: "Identity"
  input: "local/RNN/while/Switch_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Identity_2"
  op: "Identity"
  input: "local/RNN/while/Switch_2:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Identity_3"
  op: "Identity"
  input: "local/RNN/while/Switch_3:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/TensorArrayReadV2/Enter"
  op: "Enter"
  input: "local/RNN/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/TensorArrayReadV2/Enter_1"
  op: "Enter"
  input: "local/RNN/TensorArrayPack/TensorArrayScatterV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/TensorArrayReadV2"
  op: "TensorArrayReadV2"
  input: "local/RNN/while/TensorArrayReadV2/Enter"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/TensorArrayReadV2/Enter_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3584
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\016\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0289318785071373
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0289318785071373
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
  input: "local/RNN/while/TensorArrayReadV2"
  input: "local/RNN/while/Identity_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3584
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter"
  op: "Enter"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "local/RNN/while/BasicLSTMCell/Linear/concat"
  input: "local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "local/RNN/BasicLSTMCell/Linear/Bias"
  input: "local/RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/RNN/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "local/RNN/BasicLSTMCell/Linear/Bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/add/Enter"
  op: "Enter"
  input: "local/RNN/BasicLSTMCell/Linear/Bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/add"
  op: "Add"
  input: "local/RNN/while/BasicLSTMCell/Linear/MatMul"
  input: "local/RNN/while/BasicLSTMCell/add/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/split/split_dim"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/split"
  op: "Split"
  input: "local/RNN/while/BasicLSTMCell/split/split_dim"
  input: "local/RNN/while/BasicLSTMCell/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/add_1/y"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/add_1"
  op: "Add"
  input: "local/RNN/while/BasicLSTMCell/split:2"
  input: "local/RNN/while/BasicLSTMCell/add_1/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "local/RNN/while/BasicLSTMCell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/mul"
  op: "Mul"
  input: "local/RNN/while/Identity_2"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "local/RNN/while/BasicLSTMCell/split"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "local/RNN/while/BasicLSTMCell/split:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid_1"
  input: "local/RNN/while/BasicLSTMCell/Tanh"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/add_2"
  op: "Add"
  input: "local/RNN/while/BasicLSTMCell/mul"
  input: "local/RNN/while/BasicLSTMCell/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "local/RNN/while/BasicLSTMCell/add_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "local/RNN/while/BasicLSTMCell/split:3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "local/RNN/while/BasicLSTMCell/Tanh_1"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/GreaterEqual/Enter"
  op: "Enter"
  input: "local/RNN/CheckSeqLen"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/GreaterEqual"
  op: "GreaterEqual"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Select/Enter"
  op: "Enter"
  input: "local/RNN/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/Select"
  op: "Select"
  input: "local/RNN/while/GreaterEqual"
  input: "local/RNN/while/Select/Enter"
  input: "local/RNN/while/BasicLSTMCell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Select_1"
  op: "Select"
  input: "local/RNN/while/GreaterEqual_1"
  input: "local/RNN/while/Identity_2"
  input: "local/RNN/while/BasicLSTMCell/add_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Select_2"
  op: "Select"
  input: "local/RNN/while/GreaterEqual_2"
  input: "local/RNN/while/Identity_3"
  input: "local/RNN/while/BasicLSTMCell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/TensorArrayWriteV2/Enter"
  op: "Enter"
  input: "local/RNN/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/RNN/while/TensorArrayWriteV2"
  op: "TensorArrayWriteV2"
  input: "local/RNN/while/TensorArrayWriteV2/Enter"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/Select"
  input: "local/RNN/while/Identity_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/TensorArray_2/Const"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/RNN/while/add/y"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/while/add"
  op: "Add"
  input: "local/RNN/while/Identity"
  input: "local/RNN/while/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/NextIteration"
  op: "NextIteration"
  input: "local/RNN/while/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/NextIteration_1"
  op: "NextIteration"
  input: "local/RNN/while/TensorArrayWriteV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/NextIteration_2"
  op: "NextIteration"
  input: "local/RNN/while/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/NextIteration_3"
  op: "NextIteration"
  input: "local/RNN/while/Select_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Exit"
  op: "Exit"
  input: "local/RNN/while/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Exit_1"
  op: "Exit"
  input: "local/RNN/while/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Exit_2"
  op: "Exit"
  input: "local/RNN/while/Switch_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/while/Exit_3"
  op: "Exit"
  input: "local/RNN/while/Switch_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack_1/TensorArraySizeV2"
  op: "TensorArraySizeV2"
  input: "local/RNN/TensorArray"
  input: "local/RNN/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack_1/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack_1/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack_1/range"
  op: "Range"
  input: "local/RNN/TensorArrayPack_1/range/start"
  input: "local/RNN/TensorArrayPack_1/TensorArraySizeV2"
  input: "local/RNN/TensorArrayPack_1/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/RNN/TensorArrayPack_1/TensorArrayGatherV2"
  op: "TensorArrayGatherV2"
  input: "local/RNN/TensorArray"
  input: "local/RNN/TensorArrayPack_1/range"
  input: "local/RNN/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/RNN/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/RNN/transpose"
  op: "Transpose"
  input: "local/RNN/TensorArrayPack_1/TensorArrayGatherV2"
  input: "local/RNN/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape_1/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape_1"
  op: "Reshape"
  input: "local/RNN/transpose"
  input: "local/Reshape_1/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/action/w"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/action/w/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\357\351\217\272\247\231\36584@\2519\333\256\3318\377\266\241:\244t}\272\202X\200\272\210\233E\271\257\264\3559\330\204b:?=\025\272\022\036F:\265\261`9\270\267\025\272\024qT:(u\036\2728\331\017\272\233\347\211\271o\277\373\271\233\2424\265\235{.\270\264\371\253\271@\t?\271R\253 \273\254y\264\272\311\371\013:B{k\272f\265\246\271\213\321\3709\332r5\272)\331j\272i\202\2639\372bU\2726|\2078\343y\3738?`J:\342\3154:l^\367\271\363z\344:&\242\026:\336\215\226\271\204\303\014:\"I\323:\327sH8PY.:B\350\035:\324_\276\271\303\261`\2723\036<\272b\006\3619F\344m\2717\253\037\271\351(\272:\354H*:\333\025{9\023\037\2759\354Cs\271\371Gl:*>\233\272\006Q\204:\241\351\227\271\324o\221:\314\021a:~\351g\272m\300%:t\004\240:\327|\0206o\010$\272X\252\2309g\267\035\272\200\325\2649\206\276A\272C\334\3148\214\361\217\272J<b:\211\017f\271\235=\272\270e\305\207:\030\203@\271:\231A\272p\327y\272\223\036\3079\177\037}\271\266a\276\271\270\244\205:\274\371O7\372\301\347\271\271\317\2478\330\320\2669gU\230\271\264i\2319~/\260\271\325\250\204\270\032\327\3439\223\274w\271zA\000\272\307\010\222\272qk\005:\036\224\027\271;\261Q\272\205\342\205\271t_\r9\333\375\332\271\022\264\020\2729\022\023\271\036\310\372\270\031\266<:=-\353\271F\350\n\272\207i\271:\007\345\0078\336\351\022\271@P\324\271_\271\034\272\222\001;\272\307\203\23482\317\343\271\362i\225:\214\334\2509g\225\2018:\013\020\271\350mp\267+\027\216\272I\331b:\204\302<\272\336P\033\271\177IN:\357\230\2419\375I\227\271ua\271\272S\007!:F\035\n:\315uN\267|\365\200:H\377\2649\337\3537\272\272Y\3329\235\002\303\271\372\374\327:\034Gp\271\376\301\':\267\241s9\354\222\261:\016M1\270Y\3426:\340\365\3769\340r\0368\036\317\243\271\261\302\326:a\004\263:\314\003\3539d\206b\270\023-\362\271\226\2104:\277\334c90\244<:\267\252\250\270\000]\3148\305p\272\270wd\007\271\331\367}\270\234\255j\272W\214\\:8\311\234\271\203r\260\271#P\t:\264\223\2477+\3005\2709j\322\271p\360;:{%\2158\342mb\272\177\000\0279\257\272o\272t\013\302\270Y\303=\272Q#b:\3611\030:\014\320\224\270t|\361\271\254\207\211\271\242\306\211\272Y\"U:vVw\2701\374\3439\363\200\251\271\372\306\256\272`\037\"9\325\024&\272DH\3349$BW\272q\306r9\347\350\303\270\212\025\376\271 <\2239\374\217\25092*\001:3\237\2155\'\240\2758 \035\252\271-\022\036:\341\016\2219OW(:\237\252\204:\341\317a9\313]\264\271d\202\353\271\361\205K9\313\345\337:\214h\351\271t*_\272\2550\3429\244?Y:\20174\271\317,I\272`\221\2359\034\205\035:l\n\350\271\304\224\277\272z\037X:\037e\3309\0054\001\272\206\014\214\271\213O\016\272\234\262\3147\010\037J:J\000\027\272\2017\215\271\204\370\3778\273\276\250\271\276\346\033\272\034q\325\270\213\225\3429\007y\014\272.\305+\271\301\253\024\271<$g:TW\302\270\356\27388f\253\3019a>o\272\317\231\3049\204\010K\272\221\310\2329\260\203@\271\013<\000:\0247$9Q\312\032\272\374z69\225\030\3329*\305/\272\227~\014:\223x\252\272\002\203\2349\341\037\252\270A\'-:\231>\274\270\303#\370\271\3721\024\271Z\321\2108\302\372\253\272%\353i:\305\322\3328\2150\0339\302\330+\272\344\022\005\271<\370\2448\332\276&:\252 \r9\3771r\272%.(\271\336\316\2369\314\224\256\270\257\233\3068\031\376m:\326\\\3269\311\263\003\272\250:\254\271\307\304\3519\240\025\r:\235\241\3529\231\343\004\272\324\322\020\272\344\350y8\304\341p9\337f\315\267\020d\004\272\026z\334\272\223Ny:\330\003)\271&ld\271\217\326\222\271=\'\336\271\031\005\023\271\331X89\264\254\323:Q\032\237\272\313\225\0028XE\247\271\345\230,9\214\306\250:\223\246U\271\376d\035:m\261\242\271\024\315\2518q\253\0169\271\013V\272:\340\320\271\3432\036:l@6:i\027O9\203\347\2029\to\31492\361\261\271\266b\347\267\351^o9\036\\\013:\263\215+\271\334\303_9q\230\2539\265\332\230\272;\2407:\364Ez9\231\266d\272_\223\205\272\005\241\200:\333L\031\272u\013\227\272}\217\001\271sU\002:\3226\0209\207xB\271\345\260\0039\330\022S\272\372~K\2722M)\272\005\276\2058Q\217\2149\313\265\3329\355\241F:T\342z\272*\337\0008\325\246\2039\225\227\376\271\205i\341\270\273L\027\272\375/\002\271l\211\004\272\2743\215\272\311/\007\272t\234M\271s\237&\271c\312\177\272\r\244^:UQE6?\212C9\244\376\224:\205\304`\272\244=\326\267\"7\353\271y_\014\272,\000\006:O\332Z\272\306\341 \272\215-\r\271\000\336\326\271c,\3659a{\021\272\037\005q\272\"\322\001:\355\037::@\"\234\271\341\177\204\271\006]\031\271\312\350\034\272f\023\3269,Z\2619\0028\220\272\271=:\272\215\272\213:{\260\2728\304\330{9,e\2069\225s\312\271\322n\241\270\342lw9H\001>\272\376^`:\344\231\3479\200\327\2719\016\366\324\271E\344\021\271\3635&\267\243\344\202:\334P\267\270\221\304N\270\017\233\2509a\'\341\270\347\241\005\271\031\3243\272Z\333}\271\232\n\224\271\337\376\007:\265\377\342\271\010\026_\272\342\344]\271\316K\0268\314Z\271\271\217~\352\271\371\024\266\271\227\217\236:/\250\232:\220\332D\271#\300\216\272\031\006\004:yf\3639\375/\345\272\2136\3668$]\3028\036\\\27380\346\002\272\2637H8\006\333!9s\002\2019`^9\272\242\353f\272[\215:\271\216\362\204\271\014\351\0008\014&F9*\242\255\272\n\347/:\350\232\3248\334\231\227\272d\025<:H\256\032:\027l&:\262\223\262\270[\245\251:\372\006\237\270\316n\001:\334\353\213\271]\016Q\272\346\tj\272\035\242\251\271vj\2729b\346\032:qM\306\266\205\237Q\272\361\267\t8\246\0230\270N\312\3369\tI\037:\344\005k\266&_\"9w\212c:Zw&9\035\203\r80\332\03787\211\206\272\262\356\3759^\356\033\270\003\353[\271l\263\3027\351\220z\271\311\000\235\271\327\245\211\271\210 \263\272\216F\271\267*s\3709\223\210\002\271/\017G\272eIJ\271\326[\3347\'\027r6WI\227\271\032WE:J\344\3679DU\377\270\207<\201:\216\037\3379\300\260\2579\234\204\365:9uG\272\005r\036:\334\020\002:c\356S:q\351\3059c$\212:hZ\217\272\332\317^9\224\351\226:\000\204\037:&\255\230\271\021\332\3669<&\342:\276\234\034:0\300\3079\027\375\3428\241\212\272\270\304\330\036:\274\016\004:\216\304\263\271\261%\257\270\324D$:\231\242E\272\310\033\324\272\245\037K\265\030\264\241\271\037)\254:L9\215\272\222S\244\271\326[\030:\270\326\0249\260\372\35473\r\36590\357\321\271I\340\226:v\014\356:\031t\227\270\242b\2539KN\037:\335\271f8T\001\"\272r\301\225\271;B\2319\036c\364\272(\26616\021\204\320\271\347\341\204:zl\240\271\270I\272\271RB\2079\365=\244\272\217b\335:\036e\323\271\022>\316\271\246\240 \270\'\234\000\272zd\2229\211<\360\271(\340&\270\370\2324:9\271\277:_\26019\273D\303\271\2145\2266\374\341\3178i\333K9\347g\2749Y\rG:\367w<:f\222\2308\370DF:\021\326r\271\0021\212:.\344\223\272\305():=iI\270\261O\317:v\267\020\272e\314\242\272U\031\r\271\375]\2029j\022\025:j%\220\271\320(^\271t\362B:\265(x\271\020B\202\271\337e\200:R\222#9]c\2639\\\312\333\270)\331F\271@\225\3349v\367h9\230x\3008\312<%\272U\334\2729\306\226\006:\203\304#\272\332i\010:Sg\362\271\351\250\022\272*e#9O\345\201\272\204V_\272\314\312\306\272\014\004r9\342\306\3168\363\225\014\271\030&\213\272vk\311\271\362\035\2169\265&\2067b\014\2078cP\324\270\216\321N\272\024+\2139\333\361\0259?o\3147pj\036:B%4\272\201\001\217\272\371\222\201\270\201\020\31392\327\370\270h\244l:\252^\377\271\025\320F\271\030\002\357\271\324\t\2168\017~#\272\247eh\2719\3028\271\010\333-\272\271H\332\271\223\217\001:-\003\243\271\233\236A\272\"\005\227\272\215\004\004\272\321\216\251\272\237r\'9\354YC\272\244mO:\302Y\205\270\332\357\301\271k\263\032\271\254P\3429\207\020%\270\245\202\244\272\326\034\300\270\033KI9\002C\310\271\n5j\272\271\305\177\272\306\301\001\272\227\273\016\2720\241M\272\311 \2378\372j\3129\312H!:\224\302\1779\2365\007:\354\\G9}\014\025:\202\217\023\272\021\371<\272&\361\320\271\305\241q:\3403\203\272_\213\017\2715\252\257\272\373\302\230\272\313z\000:\3234\345\270>T/\272,&_:\242Q\351\271]7\017\2715\370B\271p.c\271-f>9\214L\225:o\355\2057\356\303\356\271\367\334\2229\271\323\3138l\353\3709\264\225\2607\320j\245\272V\266@\272\270\323F\272\021:\010\272\230\316\212:\336\351\257:\217-|:(\377A\270\034\271\253\271\033\010B9u\327\005\272\021\017\325\271\316\330T\272\026\003P:\177\007\251\267\036!\315\272\227\000\245\271\327sJ\272E\302\014\272|B\2529\240\r895\330f:\242\333Z\2710\256\333\271\201\363&\271\271\257\022:^\320\372\271\366\356\226:*q2\272\251\022\274\271o\325\3659w\241\027\271;\261~\272\235+ :dF\303\270\037!\315\271\0179C9[\341J\272\224\254,:\353\227\215\272\303\275Q9\365\271p\272ao\332\2717\211\034\272\021\025\304\272cc\3778\254o\274\271<`\3408I\033u7B\324R\272\006m}\267\241\010\2619\350@\2178\303\232\2249uy\2529\204\342C:-$h:\347\361\325:s\362\030:\202\205u:\000\333E:Tp\262\272\243\010\212\271\n\344@:\366\205\007:H\331_9\370\'`:T\272\203\270\310\361\214\271\351\263L\272\206>\336\272\211\305\321\271\342\210\030:\212X\230\272\305&\3219\264C\02393\301\347\271(\007\001:\346XU:qj\013:\334\263\224:\023\275/\271\010\272\200\272\330\342b\272f\273z:\304,\243\271\027\212\2109\236\225n\270g^\361\270\350\\B\272I\363\3629V\346\002\271\347\263\344:\317\0173\270_\331\0027\227\250\3637\027\014l\272l\367I9$\260\366\271\231\205\2629\374\371\3206\017[\3549.\345\210\2716\010\254\271e)\243:\314\277\0319L@2\271\225K\3479n\267\376\266g^\3639|\342\035\271~\356\3109\357\356.:0K|9\333\304g\271\330\'c\272}\350\271:\376S\202\270~ \264\271\311\330\216\272\000\373\311\271\231\"4\272;\343\3718\215\222\234\271\030\362\201\271\006\370\2629\205;O\271\003*\213\272\263\254\353\271\216+\0249.=\370\271\377\'\215\272\231\212\':I\241O:\350\273\315\272\310\230\334\272\264\027\352\271cK\006:x\246u\272\032\247\251\270\367\034\002:\207/\034:F\226\215\272\337\0235\272dB\177\272\253\205\032:X\356\003\272H\337\r9R+/:\262ck:\261E\234:\013\310\256\270H\257P\272\354\036\037\272\343\223~\270\022\235~9\252\210\307\271\342\235\025:\271\365\324\2713vU:\034\311\2459\345J\375\271\005\347.\272~\013=\271w+\006\272\344\024D\272\276)L\272\273\222\240\272\312\307Y9v$\334\271\256\303\3618=\020h\271\363\324E\272\034\034\3128\252V\3258\317\313/\272\360\237\206\272RM\317\2715-}:\241\315\025:;\351\231:\2034\n:\314{f\272%\220\014\272:u\013:\276\014.:6\017\224:\006w\251\271\222\252\0319K\027\207\2702m\336\271Z\r\326\270\216\033/:h\005\243\272L\010@\272\335\243\033\272\n\357\0069\360\326\3219\265\274K9\010e\207\271\035x\347\271\030\375\325\271\006\376c\272H\006\211\272rk\206\272\014\257\271:\005\017\243\270\220\205\2737\354\376[:?\247W9^D\0059\304b(\272w\372\2679\231f\r\271T\235\341\271\177f\2438d\335\014\272%\0371\272\253s\3445\014\262\021\271Q9\000\271\177\261P:u\n\2778\254\256\2739\303r`\272\366\243\222\272\013\360\264:\031U\210\272\222W\267\271b\275\225\270IL6\272\226\276z\272\022\316\227:\370F\353:K\007}: \230W:QD\353\271\220.\3429\2266S9\343\203\0379\201\034l\272\212\215\251\272eG\270\271\247\266?8k\030a\272g\"&\272\204\005\253\270\250k\3009o\370o\270\355\017\273\267\3151\343\267\260\013:\271\360\031\375\271\313vw:D\362(\272\354\312\240:\347.\250\271\"\215\3049\375\354\375\267\355<\t\272@\262\266\270\334!\2579\3024U9\001R\3679\353,P:\324\243\005:\253\250\3639\303?\014\272\357\3470:\276\310\023\271\3553W:\017A\373\271\225h\2209\312\255\215:\275\316\030\272R@ \271\330\244I:\257d>9X\246\0139\363B\345\271\245\"%:y\257\3009\305\014\3059\025\n;\271MZ\356\270rL<\272\236L\3638\325\217\3625M\2222:\000wF8\255\013\375\271]l\022\272\332\007/\272\213=F\272\364\244\337\267\030\356~:\355\\\005\271\005Q>:\316Q\007\272\320d.:\226!\330\2719\372\2448\237\003\\:\273\211>9\316\036\242\271\276\370\305:\374\337\272:\023\264~82\264\177:\315\tj8{\310\271\270f\243\353\271\300${\271\370\n\017:\374\003(\271 \353\345\272\017a\000\270\026\034\367\270\2600\201\271\364\354\375\270\036\367\035\272t\343I\272g\275\t\272~\"\251:\010\235\3009\377\304\3179\241\'*\272\311B\3279\n\235\264\270\220X;\272\346=k\270\353Y\2347\271\307\031\270a\240[9\267\335r\271Le]8&\216\2629?O\036:\031\321\0229\256\305\0248\323$ \271?\263j\272\'a&9\372+6\271\0047\257:,\275N:Rx\213:\2504\3359\255G`\2674\3420:\232Y*\272\204\3502\272\227E`\2722\242\210:\261\232\324\272\311\273\007\272\004\307\217\271}\026O8\334;:\272\317\024k:\2767\363\271J@?:v&\212\272cM\202\272\223\007\3446f+\253\271\335E\310\2717_\013:\201\030b8$lC9Qx5\271h(#\271\363\375\213\2710\332\367\270Dj\3619&B\010\272\220\013=:Dh\2359wd\357\271Cm\2348\254v\2508\355w\3639r\220\255\265\266an9\367\256\223\272\377\024A:\310\3337\272.\274D9\204!*\272g&#:m#M\271\355\237\372\271\221\031\3066\204a\345\271\335^\005\272,WK9\243\242\026\272-\223\236\271\020\311`9\215\261\210:\373Z\356\271\377\250 \272,\326L\272n\257\270\271\243;\225\271!I\214:\350\237;:\264S\3629\272\206\361\271\344\312P9\245A\315\271\371M\306\271\332\351\204\270\251\375.\272\3451\030\272\034\rF9\025\354\0149H/D9d\33117\002\022\3327\262\343\004:\306\227S\271\213V\271\271:\374/9~\277I9\2647\204\270\242m@9\246\212\000:KfO\272\261\"\037\272\331\221\321:\013\202\025:\225\005\3379\334\2255:U\326k\271\255\272~\272c\231\366\271\032\205\242:b\321+\272!.\0379E\r\205\272\217\334\004\2727\311\3579{UJ\271I4\210\271\374{\004\272N\254\3019\247E\3528*\002:9\371s\356\271\030\244\206:{\276o9\022P\351\267\026\234i\271\274\330\2279c\034\3609%\005P\272\336&3\272\027\010\250\271\212\"b:\\\023\2479\031ff:\244\343/:\345\270c:\201\02288\321\010.9\220\016\026\271\213\rJ\271\215\352\2709\352\325\0178{E\2068\000\254x:\n\232(9\001\325\234\272\347\356\2749Q\274j\271\240\315a9\361pD\272\"\025\2439zt\2208+sJ\272\250_D\272\304\035\2709\315\366,\272\367G\211\271\314j\200\272\010\236\3528\203W9\271L\026\016:\004\345w\271\r\373\0249\217\275\221:A\2566:\324M\r:\331\256/\272\025\0212\270\270w<\272\354\345\203\272\233\006\352\271\350\342\37470\022\212:h\354f\272\300\344\3228\241T39\250\361y\270\242a(\2720!c\272\357d\312\271\364\362J:\007\330&\270\010\215S9\372\025\013:\206\265%\271\030\207\003:\342p\2209\351\022\214\272\373AP\272\032\344<\2729u\036\270=\230\357\271NJ\211\271D\320Y\272\3564c\272\010f\026\271\372\352?\272\013\312\027\2717e\237:\211*\3129\312\373\342\267\336N\0169\334\017\2179b\217A\270\367\001\n:(e|:d*\2749G\374\251\271\330\234\0019\003g\201\271\257\212\003\267\005+D\271\016H\234\271\230\253\214\272s\371v\271-\010\244:\221\247T\272\345\023\371\271I\350O\272\220\353\373\271\215\305\024\272\206\031!\272\323*!\270\003V\244\271\237\367*\271%\340\032\2716`\2409\324\201\3519\361\233\272\270\261y\2009c\026\000\272\317\335&:23k\271\262\013\2617O\364\234\272\300<\2119\216\267O\272\020\371\030:\006\251\025\272Q{\2029\346\302\2029J\306\0109\022P\036:\"\357\206:\025Y\013\271\007\277\345\270\230Qd\272,\273.:\337~\205:\263#W\272\315\233\0309\236\277\244\271gN\2448%\313\207:\271dt96\177\3508ur\216:)\320\025\270\251i\355\271?~\221\272e\270X:\225\237\2729\333x\2029\332\371\345\270\005m\027\272\256~\3369\264\001\307\270H[\023\272\331Z\2659t\344\035\272\021I\201\271Q\324\235:}\001\3509\223\226\327\270\272\212\354\271\2679\247\271\260\344\3319@W\232\272\344\344\231\272\333\353\030:\2656$:\366\204\223\271\320 ?:XN$9\013\213\0029@gO\271\307\016\271\271&\274\177\272\203@\305\272#\276\200\271,\300\343\270|H\2709\267`#:\034\227\264:\364\312\023\271\245\372\2529\317d\302\272\354(\007:\263\031\235\271.\362\2409\024\3435:E\266M8\225\007F\272+\310\'\272\325\344$\266bG\2218#\240\016\271Q^\34190\n\231\27160+9\377\257\237\272\312\016\0379\234\334K:\310]\016\2726|\277\271\314c4\272z\320+:\024S\2029\022\025K:0\236\274\267\235\353\236\272s\311\":\3277::\212R\0029a\310\"\272\337\234\236:\020\271\220\272\243\300\3609\r~m:\215\301\'\271\236}\215\271\021\245\207\271*\210\3338\313\335\351\271|\027Z\272C\370\3217\027\360\2609\351\311\037:\333is:\n\375\3109*\257\2049\367\240\2119\037\334`:\003k7\272\212\202181m\3229\333\374\333\270\0277\3208T\033\352\271\243\320\256\271\303\236\370\271|\234\265:\033\360\344\271\354E\031\271d\351\353\271%\247\3459\303\316\3169\254\275\3549\r\216\350\271\204\307\265:NT,:&\231q\272Ea\274\270\342/\025:\001r}:\235My:\203\217\002\272\001\335/:DA_\272\233\024\010: +\3269\363\227\3449\031\0145\272\346\022\352:\220\270\0139\020\317\t\272-[@\270\263^\21091\333G\271k\374\026:\343H\277\272\342^\3449\276\034\2679\2219\310\270\247W\2718\'\317\"\272\3705\201\271\330\305\036\272\313*\3667\201\201\2438\350E\3269_ /:\324\214O8\213\260N:\026\375\206\271F^\177\272\247a<\271\2125/\272\326\241\017:\017\362\210\272\037[!9\\`\252\271\220u\1779\264\nw\2718U\2477\231\311\0209\253w\014\271\220\260\3529a\266;9\236\n\340\272x\202\000\272\250}\370\270\005\t\324\271\310z\370\271\005\234\003\272\252\242Q\271\257\333B\271\032\025\3239\025\273\2459\376\306\335\271\230TC\271\346u\0269\350\257\032\272\2649\227\271\3477\2428\355d\215:~a\205:):\3429R\023\233\267\036\333\013:,\016\330\2717\t7\270d\217H\271y~s\272\220\227\245:&\324\377\271\025\301\036\272~7\2409\010d\2679\035\37379O5\233\271\'\365+\272\004\270E:\374\032\3359.D\222\271$s\314\271\232\377\033:6\302\211\272S\236\331\271=\227\234:\335\343\216:g\024\025:\201\352=:\2572u\272\373j*\272v\005\3239\223\305e:\231#\024:&\3474\272\273\222\3719\247\000v\270\312\017G8;S\2679\202@\350\271\253\023k\271\0315\0349\367\020\2369=mr\271\331za9\\\223\2459/\321\217\272\232\345\256\271\321f\005\272\207_\334\271\225\256\0009\2433#:Q\305a\272@o\261\271\337S\213\272m\336\231\272\265<P\272\330\013v:\260$\2769\037\316A:\341\204\3269x\253o:~\300\3309\206\266\2408\265\270U9\\;\356\271\037%\215\271\374\035\2008\217mH:\260\253\2169\020V\206:8O\'9\016\010u9Qu):b\320\001\272\302b!:5\271\365\271b:\3709/7\2677\371\311T\271\2016!\271\222\2063\272\205\244.\272\232\035$:\371\226\231:\ts\032\272\256\374+\272\230?8\272;h4:[\356\':\345E\034\271\035u$:Ut\210\272\037\365\004:{\374\265\271R\201\256\271\023\320Z\272\204\317\2409\255\244\3129\325\303\004:\024f.:\235\352\001\271M\317\212\271r\322\034\272\300Z89\031B\002\272\213\024\312\271&>\2239q\311\003\272\235\213\220\272\304\233\204\271Wq\316\271\272z\266\271k\366\022\272\331\277\2279\350\324\004:\351\325\0067C\014~988\366\270\337\000\201\271\007\226o\271MYG\271C\201A:$\255\365\271Q\333+:#\027\230\271}mn\272Z\234\313\271\007\322\3709*\307\263\272d\377\3009\314\351G\272\206\321*:\2458\377\271C\326 \272\301L(\272\204\362\010:\363\215\\:\267x\372\271&G\317:6\362(9\224\246\3519\377\266\2118es\226\271KUX9\360\227\2158\213\037\03585\242\025;\256\371h9\321\037T\271|\265\211\272/\313\240\272A\372C:\025\204s\272\343\203\250\272\tk\006:\002\265J\272{\013\0309\2362\023:\253\n\214\270\351n[9\177\2124\272>\360\222\272\205\235O\271G\334m\272\013j\300:\027\234Q:\327|\0059\337\312\025\271\337\377\243\271\241\321\2559\270%\315\270\001\277t\270\233\345\347\271\347\'\261\270\334\177\221:\370\330|9\244\242\":\225=\020\270\022\017(:\265\305\3159`\\\2139\362\223u\272\'\216\203\272\375L\325\270W\211\2509vy\r:\027\300\305\271[\356\2038#.(\272\364>\307\271\323\225}5.\225\216:\325\261\020\272o\002\3539\311_\2239\376\353(\271E\0015:\036V\211:\010\307N\271\205\376\026\271-\243=:\231\275r:\205\352\275\271(f\334\271\\\261\206:\263\006\240\270\335\245\344\271\372\375\335:D\335\031\271\326\001\023\271\221&\033\272aiI:\212\301l\271\241\317\2209\031\nC\272p;\000:\2724\261\271j\276i9\312\256\021\270_\321\236\271\331$\':\204\351\261\271\016\311\3549\261d\3128\345)\201\271\225Cw\272Av3\272\2441\033:\243\325\3229\r,\222\270\311\37199GJ\3729\363\004o9\307\257\2038)\336\255:<\247\2269C\022U\271\251\252\3238\323_\007\271\203.v:BQ7\2726x\023\2725S\3337\256\305\277:{\'I8 \025\001:\245\356\253\272\200\002\221\271\'\177\325\270\2336\314\271_\315\005\272\347\263 \272\266+*9,\333\266\271\312\005\232\270\023)\217\271#\332\3539\037Vs9\325[\2208\372\316\375\271\212\245R\2723\374e\272c\272\2149\213\353\003\272\376\007\277\271A0.:\353(r::\231\34199\025\3539\200\356\3129\233\020_\270\274u\217\271\020\002#\272EO\3749\000\344\0239Puf:KP<\271\264\213f9\356\032\n9\317\221T9\003JG:\204_k\271\365\265H\272Ev\006\272\251\003\2209\255\350\253\267\205\23228)\324\006\272y\301\3239\312\361\2738\203\350\202:\223\351R8\233\033\361\271\325,\273\271\301\200\022:\226+\005\272uS\3269F\362\001:\310|^\270\310~\230\2716\016\323\272=t%\272\321<\006:<\2727\271\312Ry\272\321e\337\271\242\206\377\267s\362m\272/U)\272*\014\017:\366\355\3149kj\206:\330.C9TQ\335\270\3208\2279\375\177\203:2\240\021\266#\034\030\272\375\370P8\2033\317\271\202\231V\272\324\212d\271\331\334}9\234h\305\265\233\371\216\271\0349\'\272I \241:\036\313\003:\315\002s\272PR\034:\n!>\272w\231\'\271\323(\254\272\300\256\256\271\341\240Q\272\375\351\351\271J\017\2678\345\337\3179V:B9\216\214\3318\027\024s\272\225\025\226\267\335)\2049\347\026[:EzG\272\255\345S:o\n\r\270\250\246\001\272\002\327\240\271\275\344\003\271R\2104:\245\357\222:\202\367\032\270\302\2764:\204\te\2720H\347\270\213\256Y9\244x\22193qu\271\275\245I9\262vI\270\351-e\272Q\025\215\272j\007\2308E+3:\032#\014:9~X\2727\260\3009\3102\177\271\343\261):\246t`9\324\301\0149\367\010\2449\240l\344\271\216\311\225\271\327\302\000:\360|\223:W\213\215:\363\260\264:;c\024\271\326GZ9-\274\3249v\037\3669\342B\3419Pl\252\271\233\235\271:\336\344\026\270\245\231u9\233\210-:\3371591O\0369\021~\260\271G\322 :\274\257#97mo:AFs\272\241\222.\272\301\227\276\270]e\3109\0267\267\271\330\255$\272Sn\302\270\324G\207\270B\024\3009PZ|\267/\316\3426C\237\2658\351\335\362\271\375\251\272\271\026\372+\272\031_\220\272|\"\006;\340\360\2719\357\367p\271\314d3\270@-O\272\231\304\3579\324 \210:G\267l:\357\340\3319\'V\3349;\361\314\271\303\374}\270=.\006\272p5::\340\376R8W\267e:\220\023z:\207)\214:\203!!\270E\212k:(\326\3318\245S8:H\274\2509\221`F9\033\252\3559-\2019\272+V\211:@\240\022:\027\206`:\222i\200:\020\242\25194\361w\272\254\222\330\270\252\371)9\214>\\\272br\203:z\250\352\271M\222%:\001N\3068Q\322[\271}!\004\271\023\010\2129\327\344\252\272\r\036\312\271\246\240\2579{ks\271c)_\271\206\222I:E\277\3618\023\206\020:\037\247\236\271\201\372\3748\347\363\1779\247\226\022\272\254\367\030\272\t\346\020:\2121K9\024\267\2267+Q\3039>v29\325\026\2058w2-:\24298:\305\225\250\272\t\377\262\271c1\034\272\355\373\027\272.L\2379\357\337\3347\360\337\032\272]Uq\272\0054\3759\245/\n8NH\2119\t+|:\344\030w\270\253\00729qS\0309\267F\277\272\234\"\\8cv\262\270\022\"N:\025P\3509\234wA\271\014\202\371\271CpV\271Q6\234\272q\203Q8\023+\255:d\016&\272SD):\203\"\3759C$o9\254\302@\272p\2372\272\010\254\3009\036\2252:\353ol\2728.\214\272\206\327.:\014\315\2638\205\265\217\271P~G\271X\315\312\267\331\206\003\270\200\355\'9\344\261\021:^m\2068f>\2639\276A\0269\204\262\2079\360\212;:o?\021\271\207$\261\271z\004\027:nvL\272\237\375\306\272/\220$\270\224\233\022\272b\334\006\273~k\t:9]v\272\373WR\272,I\3159\001\312v9\214P\030:\216\264\255\271v\0041:\306\r\3749\247,_:i\252\3409?\'28\021\215W\272\351\342\2769\3155\240\270y\004\020\271\2724\r\272\361\0347:\315\311\200\272u\'\016:\005\323\027\271\205;\314\271D\255T:\2437\':p;\357\270<o|\271\r\010\314\271\003\345V9\233\212\302\271\336h\352\271l\217n\270\243\265F\272\310\031T:KiC:\226\233\234:\326\036\371\270A\200\233\272\016\016\233:\332?\025\2726[)9(\260\n9\026\206\276\271\207\320\036:\264\3637\272\210\271\352\271\374%\3728<,I9\363(\'\272Mv\202\272c\205\2079\207\225\002\272\006|\200:\035\276\2629\251\374\025:\342;\023:^V_:\2624E\272\3743\2427w9\225\271i\320I:7\344j\270b\3511:\303u\320\271r9\3329\262D^\272\31165:\n\300\200\272\211K\2408\310\007\3229\360\206\3268c%\260\271\261\007\303\272\243\024\0349\327W\0207&n\263:\032\326-8N\342\244:\243]\034\271\205\224|8\214b\'\272\n\0053\272\t\007\020\272\024\022\361\270\347\275\366\271\017\020\242\270\213\377\3128C1h\271V\010\r\272\345#39DP\003:=\342\2479\230m\2309"
      }
    }
  }
}
node {
  name: "local/action/w/Assign"
  op: "Assign"
  input: "local/action/w"
  input: "local/action/w/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/action/w/read"
  op: "Identity"
  input: "local/action/w"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "local/action/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/action/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/action/b/Assign"
  op: "Assign"
  input: "local/action/b"
  input: "local/action/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/action/b/read"
  op: "Identity"
  input: "local/action/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "local/MatMul"
  op: "MatMul"
  input: "local/Reshape_1"
  input: "local/action/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/add"
  op: "Add"
  input: "local/MatMul"
  input: "local/action/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "local/value/w"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/value/w/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        tensor_content: "!\322\266\275H\333\r<y\026\026\276\365\333/<5\214Q=\367Pn\275\275\003o=40\207\275\223\r\251\275\217\313#\275\202\254\365\275|\257\315\275\363\276\245=\316\355\333\274\252\r\\\275\2453\374=(Z\215\275\010\352\331\275;/\315<\320p\030;)\0026\275\302]\355<\230R\253\2757\016\325;\371Q%\2750\256\204=hU\206\273\253\301\212=K\270\267<\336\227\247\275\374\006y=\237\261;=Z\353i=\331\310X\275\352@\372\273QT\326=cgT=\003\366X<f\254\275=:\270\272\275\343)\215<\36109=h\322\204<j\320~\2758\334%=QX\327\274\3633\004=\306\177L\274\035vP=\t}*\275\353P\200=\374\214\272\275bn&=\304\317\206=\003\242q=\024\253\367\274\006y\007\276\223\202A\275\200\016\316\275\334!\006\272p\0343=\245\"\277\274\344|?\275_e\304;\013\310\214<\316\327\004>w\217\262\274\35366=_QU\275l,\313\275\255S\031\275\242\255.>z\271\227=K\267\027\275L\334w\274&H\022=\004#O>\277\262\200\274`\322\237=\272\374D;#\3123<R\261\026\275\352\225\022\275\023x\227\274\242\267\221\274\315VG\274\357\276\351\275\276\003\331\275y\341\247<\032\325\316:\205\213?\275\005\320\221=Wt\356<\212A><.wu=\311\325\373:\311\322\'=\3728`=\332\372\350\274[\256\327<\020LG\275$\231u=3x\377\273\3429D<\006\365^\275x{[\274\203$\227=AWj\275\023>\312\273\223\357\323=\243\301\215\275.\360\264\274\371\002\252\275\276\361\006\275\033\037\255\275\243\246\370<\376\270|<B\256S=\2056*=\330#\375<<S\374=\347\017,=W\236\332\274\256\262\371\275\203\274\014\276s|\305<\177\212\351<\025T\370\274rw\'\275\261\341@\274\2412i;\236\253\210\275\t7\216\275i7;\275n+J=D\327\205:d\250b\272\230\243\273=\032K\312=\244\037T=\225j<\274\346y\310\275&\345-<\217\036!\275P\'\340=\034\253\301=>\355d<adU=\232y\327\275~\316n\275=\270i=\226M\277<\230\340\243=7w\274\274\320\234\206\275#@\037<<\312\367=_\t \275N\203\365<v\321)=\327\241J\275\206\242\247\274u\265\033=(R\274\275\325\320\336=i\007C\275\220_\224\274\216\324\021<H\243\226\274\232\252/=BZ\255\275\217\312T\274>1\235=N\020E\275\323\335\221\275\023\263\310=S\217\327=\023\262\022\274\243\010\340=HK\247\274\326$\210=\336x\311=6\t\204\275?\342\r>=\255c=\346\tW<\354\232/\275u\270:\275\251<.<\023z\337;\203\177\005>\360\270\303\274>a\213\275\375[F==\303\340<\353\204\007\275\0239c\274\023Oc=\201\363\223\275P\306\227<\201\365}\2757\017\340<A\376\013=J\376\200\274\341\365\264<Y\222j\275\361\314\377<\246\304\353=\024\354\304\275m:\346<\377\314\254<U&\"\275.\322\273;\0061\203=\301\300x\274\353R\362<}H\000\275kq\334\274L\247\344=\354\353\225\275\317\362\205\274[\363\263=\223\363,\276\340\242\234\275\367\203\371<g\264\304\274\t{\305\2754|\201\275\037\220X=\352\306\240\275\247\013\311=\361\2362<-\334\022=\036\276\347\274\021\257,=/sy\275\311F\013=\333\217\317\274\030\337m\275!5y\275\263 <\2746\033\252\274i\330\210\275\300\356M<\275`\310\274zjy=\277\255\353\274\213\003\031\274\2240[\275\034\322\226\274\230mq\275,N$;\375h\256;j\312H=\227A\302=\214\265\016\275"
      }
    }
  }
}
node {
  name: "local/value/w/Assign"
  op: "Assign"
  input: "local/value/w"
  input: "local/value/w/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/value/w/read"
  op: "Identity"
  input: "local/value/w"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/value/b"
  op: "Variable"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/value/b/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/value/b/Assign"
  op: "Assign"
  input: "local/value/b"
  input: "local/value/b/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/value/b/read"
  op: "Identity"
  input: "local/value/b"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_1"
  input: "local/value/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/add_1"
  op: "Add"
  input: "local/MatMul_1"
  input: "local/value/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape_2/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/Reshape_2"
  op: "Reshape"
  input: "local/add_1"
  input: "local/Reshape_2/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1"
  op: "StridedSlice"
  input: "local/RNN/while/Exit_2"
  input: "local/strided_slice_1/stack"
  input: "local/strided_slice_1/stack_1"
  input: "local/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2"
  op: "StridedSlice"
  input: "local/RNN/while/Exit_3"
  input: "local/strided_slice_2/stack"
  input: "local/strided_slice_2/stack_1"
  input: "local/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Max/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/Max"
  op: "Max"
  input: "local/add"
  input: "local/Max/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "local/sub"
  op: "Sub"
  input: "local/add"
  input: "local/Max"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "local/multinomial/Multinomial/num_samples"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/multinomial/Multinomial"
  op: "Multinomial"
  input: "local/sub"
  input: "local/multinomial/Multinomial/num_samples"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Squeeze"
  op: "Squeeze"
  input: "local/multinomial/Multinomial"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "local/one_hot/on_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/one_hot/off_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/one_hot/depth"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "local/one_hot"
  op: "OneHot"
  input: "local/Squeeze"
  input: "local/one_hot/depth"
  input: "local/one_hot/on_value"
  input: "local/one_hot/off_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "local/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3"
  op: "StridedSlice"
  input: "local/one_hot"
  input: "local/strided_slice_3/stack"
  input: "local/strided_slice_3/stack_1"
  input: "local/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ac"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "adv"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "r"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "LogSoftmax"
  op: "LogSoftmax"
  input: "local/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "local/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "LogSoftmax"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul"
  input: "Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "Sum"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul_1"
  input: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "local/Reshape_2"
  input: "r"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "Square"
  input: "Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_2/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "mul_2/x"
  input: "Sum_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "Softmax"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "mul_3"
  input: "Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg_1"
  op: "Neg"
  input: "Sum_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_4/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "mul_4/x"
  input: "mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Neg"
  input: "mul_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_5/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "Neg_1"
  input: "mul_5/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "add"
  input: "mul_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "local/RNN/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^local/RNN/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPush"
  input: "^gradients/local/RNN/while/Select_1_grad/zeros_like/StackPush"
  input: "^gradients/local/RNN/while/Select_1_grad/Select/StackPush"
  input: "^gradients/local/RNN/while/Select_2_grad/zeros_like/StackPush"
  input: "^gradients/local/RNN/while/Select_2_grad/Select/StackPush"
  input: "^gradients/local/RNN/while/Select_grad/Select/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/b_sync"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_1_grad/Shape"
  input: "gradients/sub_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/Fill"
  input: "gradients/sub_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Sum"
  input: "gradients/sub_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Fill"
  input: "gradients/sub_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/sub_1_grad/Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_1_grad/Neg"
  input: "gradients/sub_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/sub_1_grad/Reshape"
  input: "gradients/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/sub_1_grad/Reshape"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_5_grad/Shape"
  input: "gradients/mul_5_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/mul"
  op: "Mul"
  input: "gradients/sub_1_grad/Reshape_1"
  input: "mul_5/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/mul_5_grad/mul"
  input: "gradients/mul_5_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_5_grad/Sum"
  input: "gradients/mul_5_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/mul_1"
  op: "Mul"
  input: "Neg_1"
  input: "gradients/sub_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_5_grad/mul_1"
  input: "gradients/mul_5_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_5_grad/Sum_1"
  input: "gradients/mul_5_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_4_grad/Shape"
  input: "gradients/mul_4_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/mul"
  op: "Mul"
  input: "gradients/add_grad/Reshape_1"
  input: "mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/mul_4_grad/mul"
  input: "gradients/mul_4_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_4_grad/Sum"
  input: "gradients/mul_4_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/mul_1"
  op: "Mul"
  input: "mul_4/x"
  input: "gradients/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_4_grad/mul_1"
  input: "gradients/mul_4_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_4_grad/Sum_1"
  input: "gradients/mul_4_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Neg_1_grad/Neg"
  op: "Neg"
  input: "gradients/mul_5_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Neg_grad/Neg"
  input: "gradients/Sum_1_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Shape"
  op: "Shape"
  input: "mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_1_grad/Reshape"
  input: "gradients/Sum_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_2_grad/Shape"
  input: "gradients/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/mul_4_grad/Reshape_1"
  input: "Sum_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/mul"
  input: "gradients/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum"
  input: "gradients/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/mul_1"
  op: "Mul"
  input: "mul_2/x"
  input: "gradients/mul_4_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_2_grad/mul_1"
  input: "gradients/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum_1"
  input: "gradients/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Neg_1_grad/Neg"
  input: "gradients/Sum_3_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Shape"
  op: "Shape"
  input: "mul_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_3_grad/Reshape"
  input: "gradients/Sum_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "Sum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/Sum_1_grad/Tile"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul_1"
  op: "Mul"
  input: "Sum"
  input: "gradients/Sum_1_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Reshape_1"
  input: "gradients/Sum_2_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Shape"
  op: "Shape"
  input: "Square"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_2_grad/Reshape"
  input: "gradients/Sum_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Shape"
  op: "Shape"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_3_grad/Shape_1"
  op: "Shape"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_3_grad/Shape"
  input: "gradients/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/mul"
  op: "Mul"
  input: "gradients/Sum_3_grad/Tile"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/mul_3_grad/mul"
  input: "gradients/mul_3_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_3_grad/Sum"
  input: "gradients/mul_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/mul_1"
  op: "Mul"
  input: "Softmax"
  input: "gradients/Sum_3_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_3_grad/mul_1"
  input: "gradients/mul_3_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_3_grad/Sum_1"
  input: "gradients/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Shape"
  input: "mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/add"
  op: "Add"
  input: "Sum/reduction_indices"
  input: "gradients/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/mod"
  op: "Mod"
  input: "gradients/Sum_grad/add"
  input: "gradients/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range"
  op: "Range"
  input: "gradients/Sum_grad/range/start"
  input: "gradients/Sum_grad/Size"
  input: "gradients/Sum_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/Sum_grad/Shape_1"
  input: "gradients/Sum_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Sum_grad/range"
  input: "gradients/Sum_grad/mod"
  input: "gradients/Sum_grad/Shape"
  input: "gradients/Sum_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_grad/DynamicStitch"
  input: "gradients/Sum_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/floordiv"
  op: "Div"
  input: "gradients/Sum_grad/Shape"
  input: "gradients/Sum_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Reshape"
  input: "gradients/Sum_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/Sum_2_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul"
  op: "Mul"
  input: "gradients/Square_grad/mul/x"
  input: "sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/Sum_2_grad/Tile"
  input: "gradients/Square_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/mul_3_grad/Reshape"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/Softmax_grad/mul"
  input: "gradients/Softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/Softmax_grad/Sum"
  input: "gradients/Softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/mul_3_grad/Reshape"
  input: "gradients/Softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/Softmax_grad/sub"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul_1"
  op: "Mul"
  input: "LogSoftmax"
  input: "gradients/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Shape"
  op: "Shape"
  input: "local/Reshape_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Shape_1"
  op: "Shape"
  input: "r"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_grad/Shape"
  input: "gradients/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Sum"
  op: "Sum"
  input: "gradients/Square_grad/mul_1"
  input: "gradients/sub_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_grad/Sum"
  input: "gradients/sub_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/Square_grad/mul_1"
  input: "gradients/sub_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sub_grad/Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_grad/Neg"
  input: "gradients/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/mul_3_grad/Reshape_1"
  input: "gradients/mul_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Exp"
  op: "Exp"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/LogSoftmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/mul"
  op: "Mul"
  input: "gradients/LogSoftmax_grad/Sum"
  input: "gradients/LogSoftmax_grad/Exp"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/sub"
  op: "Sub"
  input: "gradients/AddN"
  input: "gradients/LogSoftmax_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_2_grad/Shape"
  op: "Shape"
  input: "local/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_grad/Reshape"
  input: "gradients/local/Reshape_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/Softmax_grad/mul_1"
  input: "gradients/LogSoftmax_grad/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Softmax_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_grad/Shape"
  op: "Shape"
  input: "local/MatMul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "gradients/local/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/add_grad/Shape"
  input: "gradients/local/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/local/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/add_grad/Sum"
  input: "gradients/local/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/local/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/add_grad/Sum_1"
  input: "gradients/local/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Shape"
  op: "Shape"
  input: "local/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/local/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/add_1_grad/Shape"
  input: "gradients/local/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/local/Reshape_2_grad/Reshape"
  input: "gradients/local/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/add_1_grad/Sum"
  input: "gradients/local/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/Reshape_2_grad/Reshape"
  input: "gradients/local/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/add_1_grad/Sum_1"
  input: "gradients/local/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/local/add_grad/Reshape"
  input: "local/action/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_1"
  input: "gradients/local/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/local/add_1_grad/Reshape"
  input: "local/value/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_1"
  input: "gradients/local/add_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/local/MatMul_grad/MatMul"
  input: "gradients/local/MatMul_1_grad/MatMul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_1_grad/Shape"
  op: "Shape"
  input: "local/RNN/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_2"
  input: "gradients/local/Reshape_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/RNN/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/local/Reshape_1_grad/Reshape"
  input: "gradients/local/RNN/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayGrad/TensorArrayGradV2"
  op: "TensorArrayGradV2"
  input: "local/RNN/TensorArray"
  input: "local/RNN/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/RNN/while/Exit_1"
  input: "^gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayGrad/TensorArrayGradV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayScatterV2"
  op: "TensorArrayScatterV2"
  input: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayGrad/TensorArrayGradV2"
  input: "local/RNN/TensorArrayPack_1/range"
  input: "gradients/local/RNN/transpose_grad/transpose"
  input: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArray_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/local/RNN/TensorArrayPack_1/TensorArrayGatherV2_grad/TensorArrayScatterV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/local/RNN/while/Exit_1_grad/b_exit"
  input: "gradients/local/RNN/while/Switch_1_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/local/RNN/while/Exit_2_grad/b_exit"
  input: "gradients/local/RNN/while/Switch_2_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/local/RNN/while/Exit_3_grad/b_exit"
  input: "gradients/local/RNN/while/Switch_3_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArray/Const"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter"
  op: "Enter"
  input: "local/RNN/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/TensorArrayGradV2"
  op: "TensorArrayGradV2"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter"
  input: "gradients/local/RNN/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/RNN/while/Merge_1_grad/Switch:1"
  input: "^gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/TensorArrayGradV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
        s: "loc:@local/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
        s: "loc:@local/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/RefEnter"
  input: "local/RNN/while/Identity"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
        s: "loc:@local/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
        s: "loc:@local/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
        s: "loc:@local/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/b_sync"
  op: "ControlTrigger"
  input: "^gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop"
  input: "^gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop"
  input: "^gradients/local/RNN/while/Select_1_grad/Select/StackPop"
  input: "^gradients/local/RNN/while/Select_2_grad/zeros_like/StackPop"
  input: "^gradients/local/RNN/while/Select_2_grad/Select/StackPop"
  input: "^gradients/local/RNN/while/Select_grad/Select/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2"
  op: "TensorArrayReadV2"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/TensorArrayGradV2"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/RefEnter"
  input: "local/RNN/while/Identity_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/Select_1_grad/Select/RefEnter"
  input: "local/RNN/while/GreaterEqual_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/local/RNN/while/Select_1_grad/Select/StackPop"
  input: "gradients/local/RNN/while/Merge_2_grad/Switch:1"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/local/RNN/while/Select_1_grad/Select/StackPop"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like"
  input: "gradients/local/RNN/while/Merge_2_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like/RefEnter"
  input: "local/RNN/while/Identity_3"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/Select_2_grad/Select/RefEnter"
  input: "local/RNN/while/GreaterEqual_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/Select_2_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients/local/RNN/while/Select_2_grad/Select/StackPop"
  input: "gradients/local/RNN/while/Merge_3_grad/Switch:1"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients/local/RNN/while/Select_2_grad/Select/StackPop"
  input: "gradients/local/RNN/while/Select_2_grad/zeros_like"
  input: "gradients/local/RNN/while/Merge_3_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/RNN/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/RNN/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/Select_grad/Select/RefEnter"
  input: "local/RNN/while/GreaterEqual"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/Select_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select"
  op: "Select"
  input: "gradients/local/RNN/while/Select_grad/Select/StackPop"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2"
  input: "gradients/local/RNN/while/Select_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/local/RNN/while/Select_grad/Select/StackPop"
  input: "gradients/local/RNN/while/Select_grad/zeros_like"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/RNN/while/Select/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/RNN/while/Select/Enter_grad/b_acc_1"
  input: "gradients/local/RNN/while/Select/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/Select/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/Add"
  op: "Add"
  input: "gradients/local/RNN/while/Select/Enter_grad/Switch:1"
  input: "gradients/local/RNN/while/Select_grad/Select"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/RNN/while/Select/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/RNN/while/Select/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/local/RNN/while/Select_2_grad/Select_1"
  input: "gradients/local/RNN/while/Select_grad/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Tanh_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "gradients/AddN_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/local/RNN/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/zeros_grad/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/Select/Enter_grad/b_acc_3"
  input: "gradients/local/RNN/zeros_grad/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/mul/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_2_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/local/RNN/while/Select_1_grad/Select_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_4"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_4"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/local/RNN/while/Select_1_grad/zeros_like/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Tanh"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Sigmoid_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_2_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/local/RNN/while/Select_1_grad/Select"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/mul/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/mul/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/mul_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/split/split_dim"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_1_grad/Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/RNN/while/BasicLSTMCell/split_grad/concat"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Sum_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Reshape"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3584
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Linear/concat"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3584
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/Add"
  op: "Add"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/Switch:1"
  input: "gradients/local/RNN/while/BasicLSTMCell/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\r\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  op: "StackPush"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  input: "local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  op: "StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/while/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch:1"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArray/Const"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter"
  op: "Enter"
  input: "local/RNN/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter_1"
  op: "Enter"
  input: "local/RNN/TensorArrayPack/TensorArrayScatterV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2"
  op: "TensorArrayGradV2"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter_1"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2/Enter_1"
  input: "^gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayWriteV2"
  op: "TensorArrayWriteV2"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/TensorArrayGradV2"
  input: "gradients/local/RNN/while/TensorArrayWriteV2_grad/TensorArrayReadV2/StackPop"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Slice"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArray_1/Const"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/local/RNN/while/Select_2_grad/Select"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/concat_grad/Slice_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/RNN/while/local/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_1"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/Switch:1"
  input: "gradients/local/RNN/while/TensorArrayReadV2_grad/TensorArrayWriteV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArray/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGrad/TensorArrayGradV2"
  op: "TensorArrayGradV2"
  input: "local/RNN/TensorArray_1"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/RNN/while/TensorArrayReadV2/Enter_1_grad/b_acc_3"
  input: "^gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGrad/TensorArrayGradV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGatherV2"
  op: "TensorArrayGatherV2"
  input: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGrad/TensorArrayGradV2"
  input: "local/RNN/TensorArrayPack/range"
  input: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/local/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/local/RNN/TensorArrayPack/TensorArrayScatterV2_grad/TensorArrayGatherV2"
  input: "gradients/local/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/ExpandDims_grad/Shape"
  op: "Shape"
  input: "local/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/transpose_grad/transpose"
  input: "gradients/local/ExpandDims_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3328
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_grad/Shape"
  op: "Shape"
  input: "local/Elu_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/ExpandDims_grad/Reshape"
  input: "gradients/local/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Elu_3_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/Reshape_grad/Reshape"
  input: "local/Elu_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Shape"
  op: "Shape"
  input: "local/l4/Conv2D"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/l4/add_grad/Shape"
  input: "gradients/local/l4/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/Elu_3_grad/EluGrad"
  input: "gradients/local/l4/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/l4/add_grad/Sum"
  input: "gradients/local/l4/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/Elu_3_grad/EluGrad"
  input: "gradients/local/l4/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l4/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/l4/add_grad/Sum_1"
  input: "gradients/local/l4/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l4/Conv2D_grad/Shape"
  op: "Shape"
  input: "local/Elu_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/l4/Conv2D_grad/Shape"
  input: "local/l4/W/read"
  input: "gradients/local/l4/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/l4/Conv2D_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Elu_2"
  input: "gradients/local/l4/Conv2D_grad/Shape_1"
  input: "gradients/local/l4/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/Elu_2_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/l4/Conv2D_grad/Conv2DBackpropInput"
  input: "local/Elu_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Shape"
  op: "Shape"
  input: "local/l3/Conv2D"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/l3/add_grad/Shape"
  input: "gradients/local/l3/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/Elu_2_grad/EluGrad"
  input: "gradients/local/l3/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/l3/add_grad/Sum"
  input: "gradients/local/l3/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/Elu_2_grad/EluGrad"
  input: "gradients/local/l3/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/l3/add_grad/Sum_1"
  input: "gradients/local/l3/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l3/Conv2D_grad/Shape"
  op: "Shape"
  input: "local/Elu_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/l3/Conv2D_grad/Shape"
  input: "local/l3/W/read"
  input: "gradients/local/l3/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/l3/Conv2D_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Elu_1"
  input: "gradients/local/l3/Conv2D_grad/Shape_1"
  input: "gradients/local/l3/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/Elu_1_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/l3/Conv2D_grad/Conv2DBackpropInput"
  input: "local/Elu_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Shape"
  op: "Shape"
  input: "local/l2/Conv2D"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/l2/add_grad/Shape"
  input: "gradients/local/l2/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/Elu_1_grad/EluGrad"
  input: "gradients/local/l2/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/l2/add_grad/Sum"
  input: "gradients/local/l2/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/Elu_1_grad/EluGrad"
  input: "gradients/local/l2/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/l2/add_grad/Sum_1"
  input: "gradients/local/l2/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l2/Conv2D_grad/Shape"
  op: "Shape"
  input: "local/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/l2/Conv2D_grad/Shape"
  input: "local/l2/W/read"
  input: "gradients/local/l2/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/l2/Conv2D_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Elu"
  input: "gradients/local/l2/Conv2D_grad/Shape_1"
  input: "gradients/local/l2/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/l2/Conv2D_grad/Conv2DBackpropInput"
  input: "local/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Shape"
  op: "Shape"
  input: "local/l1/Conv2D"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/l1/add_grad/Shape"
  input: "gradients/local/l1/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/Elu_grad/EluGrad"
  input: "gradients/local/l1/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/l1/add_grad/Sum"
  input: "gradients/local/l1/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/Elu_grad/EluGrad"
  input: "gradients/local/l1/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/l1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/l1/add_grad/Sum_1"
  input: "gradients/local/l1/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/l1/Conv2D_grad/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/l1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/l1/Conv2D_grad/Shape"
  input: "local/l1/W/read"
  input: "gradients/local/l1/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/l1/Conv2D_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Placeholder"
  input: "gradients/local/l1/Conv2D_grad/Shape_1"
  input: "gradients/local/l1/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "truediv"
  op: "Div"
  input: "Neg"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/policy_loss/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/policy_loss"
      }
    }
  }
}
node {
  name: "model/policy_loss"
  op: "ScalarSummary"
  input: "model/policy_loss/tags"
  input: "truediv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "Div"
  input: "mul_2"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/value_loss/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/value_loss"
      }
    }
  }
}
node {
  name: "model/value_loss"
  op: "ScalarSummary"
  input: "model/value_loss/tags"
  input: "truediv_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "Div"
  input: "Neg_1"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/entropy/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/entropy"
      }
    }
  }
}
node {
  name: "model/entropy"
  op: "ScalarSummary"
  input: "model/entropy/tags"
  input: "truediv_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/state/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/state"
      }
    }
  }
}
node {
  name: "model/state"
  op: "ImageSummary"
  input: "model/state/tag"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/local/l1/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/local/l2/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/local/l3/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/local/l4/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/local/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/local/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/local/MatMul_1_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/local/add_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/grad_global_norm/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/grad_global_norm"
      }
    }
  }
}
node {
  name: "model/grad_global_norm"
  op: "ScalarSummary"
  input: "model/grad_global_norm/tags"
  input: "global_norm/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "local/l1/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "local/l1/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "local/l2/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "local/l2/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "local/l3/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "local/l3/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "local/l4/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "local/l4/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix/read"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "local/RNN/BasicLSTMCell/Linear/Bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Bias/read"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "local/action/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "local/action/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "local/value/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "local/value/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/pack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  input: "global_norm_1/L2Loss_1"
  input: "global_norm_1/L2Loss_2"
  input: "global_norm_1/L2Loss_3"
  input: "global_norm_1/L2Loss_4"
  input: "global_norm_1/L2Loss_5"
  input: "global_norm_1/L2Loss_6"
  input: "global_norm_1/L2Loss_7"
  input: "global_norm_1/L2Loss_8"
  input: "global_norm_1/L2Loss_9"
  input: "global_norm_1/L2Loss_10"
  input: "global_norm_1/L2Loss_11"
  input: "global_norm_1/L2Loss_12"
  input: "global_norm_1/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/pack"
  input: "global_norm_1/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/var_global_norm/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/var_global_norm"
      }
    }
  }
}
node {
  name: "model/var_global_norm"
  op: "ScalarSummary"
  input: "model/var_global_norm/tags"
  input: "global_norm_1/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "model/policy_loss"
  input: "model/value_loss"
  input: "model/entropy"
  input: "model/state"
  input: "model/grad_global_norm"
  input: "model/var_global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_1"
  op: "L2Loss"
  input: "gradients/local/l1/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_2"
  op: "L2Loss"
  input: "gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_3"
  op: "L2Loss"
  input: "gradients/local/l2/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_4"
  op: "L2Loss"
  input: "gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_5"
  op: "L2Loss"
  input: "gradients/local/l3/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_6"
  op: "L2Loss"
  input: "gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_7"
  op: "L2Loss"
  input: "gradients/local/l4/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_8"
  op: "L2Loss"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_9"
  op: "L2Loss"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_10"
  op: "L2Loss"
  input: "gradients/local/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_11"
  op: "L2Loss"
  input: "gradients/local/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_12"
  op: "L2Loss"
  input: "gradients/local/MatMul_1_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_13"
  op: "L2Loss"
  input: "gradients/local/add_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/pack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  input: "global_norm_2/L2Loss_1"
  input: "global_norm_2/L2Loss_2"
  input: "global_norm_2/L2Loss_3"
  input: "global_norm_2/L2Loss_4"
  input: "global_norm_2/L2Loss_5"
  input: "global_norm_2/L2Loss_6"
  input: "global_norm_2/L2Loss_7"
  input: "global_norm_2/L2Loss_8"
  input: "global_norm_2/L2Loss_9"
  input: "global_norm_2/L2Loss_10"
  input: "global_norm_2/L2Loss_11"
  input: "global_norm_2/L2Loss_12"
  input: "global_norm_2/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/pack"
  input: "global_norm_2/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm_2/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "Div"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/local/l1/add_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/local/l2/add_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/local/l3/add_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/local/l4/add_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/l4/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/RNN/while/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/local/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/local/add_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/local/MatMul_1_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/local/add_1_grad/Reshape_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "local/l1/W"
  input: "global/l1/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "local/l1/b"
  input: "global/l1/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "local/l2/W"
  input: "global/l2/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "local/l2/b"
  input: "global/l2/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "local/l3/W"
  input: "global/l3/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "local/l3/b"
  input: "global/l3/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "local/l4/W"
  input: "global/l4/W/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "local/l4/b"
  input: "global/l4/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "local/RNN/BasicLSTMCell/Linear/Matrix"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "local/RNN/BasicLSTMCell/Linear/Bias"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "local/action/w"
  input: "global/action/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "local/action/b"
  input: "global/action/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "local/value/w"
  input: "global/value/w/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "local/value/b"
  input: "global/value/b/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign"
  input: "^Assign_1"
  input: "^Assign_2"
  input: "^Assign_3"
  input: "^Assign_4"
  input: "^Assign_5"
  input: "^Assign_6"
  input: "^Assign_7"
  input: "^Assign_8"
  input: "^Assign_9"
  input: "^Assign_10"
  input: "^Assign_11"
  input: "^Assign_12"
  input: "^Assign_13"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global/global_step"
  input: "strided_slice_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l1/W/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/W/Adam/Assign"
  op: "Assign"
  input: "global/l1/W/Adam"
  input: "zeros"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/W/Adam/read"
  op: "Identity"
  input: "global/l1/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l1/W/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/W/Adam_1/Assign"
  op: "Assign"
  input: "global/l1/W/Adam_1"
  input: "zeros_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/W/Adam_1/read"
  op: "Identity"
  input: "global/l1/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l1/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/b/Adam/Assign"
  op: "Assign"
  input: "global/l1/b/Adam"
  input: "zeros_2"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/b/Adam/read"
  op: "Identity"
  input: "global/l1/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l1/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l1/b/Adam_1/Assign"
  op: "Assign"
  input: "global/l1/b/Adam_1"
  input: "zeros_3"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l1/b/Adam_1/read"
  op: "Identity"
  input: "global/l1/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l2/W/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/W/Adam/Assign"
  op: "Assign"
  input: "global/l2/W/Adam"
  input: "zeros_4"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/W/Adam/read"
  op: "Identity"
  input: "global/l2/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l2/W/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/W/Adam_1/Assign"
  op: "Assign"
  input: "global/l2/W/Adam_1"
  input: "zeros_5"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/W/Adam_1/read"
  op: "Identity"
  input: "global/l2/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l2/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/b/Adam/Assign"
  op: "Assign"
  input: "global/l2/b/Adam"
  input: "zeros_6"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/b/Adam/read"
  op: "Identity"
  input: "global/l2/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l2/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l2/b/Adam_1/Assign"
  op: "Assign"
  input: "global/l2/b/Adam_1"
  input: "zeros_7"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l2/b/Adam_1/read"
  op: "Identity"
  input: "global/l2/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l3/W/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/W/Adam/Assign"
  op: "Assign"
  input: "global/l3/W/Adam"
  input: "zeros_8"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/W/Adam/read"
  op: "Identity"
  input: "global/l3/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l3/W/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/W/Adam_1/Assign"
  op: "Assign"
  input: "global/l3/W/Adam_1"
  input: "zeros_9"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/W/Adam_1/read"
  op: "Identity"
  input: "global/l3/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l3/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/b/Adam/Assign"
  op: "Assign"
  input: "global/l3/b/Adam"
  input: "zeros_10"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/b/Adam/read"
  op: "Identity"
  input: "global/l3/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l3/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l3/b/Adam_1/Assign"
  op: "Assign"
  input: "global/l3/b/Adam_1"
  input: "zeros_11"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l3/b/Adam_1/read"
  op: "Identity"
  input: "global/l3/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l4/W/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/W/Adam/Assign"
  op: "Assign"
  input: "global/l4/W/Adam"
  input: "zeros_12"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/W/Adam/read"
  op: "Identity"
  input: "global/l4/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_13"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l4/W/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/W/Adam_1/Assign"
  op: "Assign"
  input: "global/l4/W/Adam_1"
  input: "zeros_13"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/W/Adam_1/read"
  op: "Identity"
  input: "global/l4/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_14"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l4/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/b/Adam/Assign"
  op: "Assign"
  input: "global/l4/b/Adam"
  input: "zeros_14"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/b/Adam/read"
  op: "Identity"
  input: "global/l4/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_15"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/l4/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/l4/b/Adam_1/Assign"
  op: "Assign"
  input: "global/l4/b/Adam_1"
  input: "zeros_15"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/l4/b/Adam_1/read"
  op: "Identity"
  input: "global/l4/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_16"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3584
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  input: "zeros_16"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "zeros_17"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3584
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "zeros_17"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "zeros_18"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  input: "zeros_18"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "zeros_19"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "zeros_19"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1/read"
  op: "Identity"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "zeros_20"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/action/w/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/w/Adam/Assign"
  op: "Assign"
  input: "global/action/w/Adam"
  input: "zeros_20"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/w/Adam/read"
  op: "Identity"
  input: "global/action/w/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "zeros_21"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/action/w/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/w/Adam_1/Assign"
  op: "Assign"
  input: "global/action/w/Adam_1"
  input: "zeros_21"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/w/Adam_1/read"
  op: "Identity"
  input: "global/action/w/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "zeros_22"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/action/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/b/Adam/Assign"
  op: "Assign"
  input: "global/action/b/Adam"
  input: "zeros_22"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/b/Adam/read"
  op: "Identity"
  input: "global/action/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "zeros_23"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/action/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/action/b/Adam_1/Assign"
  op: "Assign"
  input: "global/action/b/Adam_1"
  input: "zeros_23"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/action/b/Adam_1/read"
  op: "Identity"
  input: "global/action/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "zeros_24"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/value/w/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/w/Adam/Assign"
  op: "Assign"
  input: "global/value/w/Adam"
  input: "zeros_24"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/w/Adam/read"
  op: "Identity"
  input: "global/value/w/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_25"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/value/w/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/w/Adam_1/Assign"
  op: "Assign"
  input: "global/value/w/Adam_1"
  input: "zeros_25"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/w/Adam_1/read"
  op: "Identity"
  input: "global/value/w/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_26"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/value/b/Adam"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/b/Adam/Assign"
  op: "Assign"
  input: "global/value/b/Adam"
  input: "zeros_26"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/b/Adam/read"
  op: "Identity"
  input: "global/value/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_27"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/value/b/Adam_1"
  op: "Variable"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/value/b/Adam_1/Assign"
  op: "Assign"
  input: "global/value/b/Adam_1"
  input: "zeros_27"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/value/b/Adam_1/read"
  op: "Identity"
  input: "global/value/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_global/l1/W/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l1/W"
  input: "global/l1/W/Adam"
  input: "global/l1/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l1/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l1/b"
  input: "global/l1/b/Adam"
  input: "global/l1/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l2/W/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l2/W"
  input: "global/l2/W/Adam"
  input: "global/l2/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l2/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l2/b"
  input: "global/l2/b/Adam"
  input: "global/l2/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l3/W/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l3/W"
  input: "global/l3/W/Adam"
  input: "global/l3/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l3/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l3/b"
  input: "global/l3/b/Adam"
  input: "global/l3/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l4/W/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l4/W"
  input: "global/l4/W/Adam"
  input: "global/l4/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/l4/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/l4/b"
  input: "global/l4/b/Adam"
  input: "global/l4/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/RNN/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  op: "ApplyAdam"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/RNN/BasicLSTMCell/Linear/Bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/action/w/ApplyAdam"
  op: "ApplyAdam"
  input: "global/action/w"
  input: "global/action/w/Adam"
  input: "global/action/w/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/action/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/action/b"
  input: "global/action/b/Adam"
  input: "global/action/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/value/w/ApplyAdam"
  op: "ApplyAdam"
  input: "global/value/w"
  input: "global/value/w/Adam"
  input: "global/value/w/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_global/value/b/ApplyAdam"
  op: "ApplyAdam"
  input: "global/value/b"
  input: "global/value/b/Adam"
  input: "global/value/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_global/l1/W/ApplyAdam"
  input: "^Adam/update_global/l1/b/ApplyAdam"
  input: "^Adam/update_global/l2/W/ApplyAdam"
  input: "^Adam/update_global/l2/b/ApplyAdam"
  input: "^Adam/update_global/l3/W/ApplyAdam"
  input: "^Adam/update_global/l3/b/ApplyAdam"
  input: "^Adam/update_global/l4/W/ApplyAdam"
  input: "^Adam/update_global/l4/b/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Adam/update_global/action/w/ApplyAdam"
  input: "^Adam/update_global/action/b/ApplyAdam"
  input: "^Adam/update_global/value/w/ApplyAdam"
  input: "^Adam/update_global/value/b/ApplyAdam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_global/l1/W/ApplyAdam"
  input: "^Adam/update_global/l1/b/ApplyAdam"
  input: "^Adam/update_global/l2/W/ApplyAdam"
  input: "^Adam/update_global/l2/b/ApplyAdam"
  input: "^Adam/update_global/l3/W/ApplyAdam"
  input: "^Adam/update_global/l3/b/ApplyAdam"
  input: "^Adam/update_global/l4/W/ApplyAdam"
  input: "^Adam/update_global/l4/b/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Adam/update_global/action/w/ApplyAdam"
  input: "^Adam/update_global/action/b/ApplyAdam"
  input: "^Adam/update_global/value/w/ApplyAdam"
  input: "^Adam/update_global/value/b/ApplyAdam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/update_global/l1/W/ApplyAdam"
  input: "^Adam/update_global/l1/b/ApplyAdam"
  input: "^Adam/update_global/l2/W/ApplyAdam"
  input: "^Adam/update_global/l2/b/ApplyAdam"
  input: "^Adam/update_global/l3/W/ApplyAdam"
  input: "^Adam/update_global/l3/b/ApplyAdam"
  input: "^Adam/update_global/l4/W/ApplyAdam"
  input: "^Adam/update_global/l4/b/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Adam/update_global/RNN/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Adam/update_global/action/w/ApplyAdam"
  input: "^Adam/update_global/action/b/ApplyAdam"
  input: "^Adam/update_global/value/w/ApplyAdam"
  input: "^Adam/update_global/value/b/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1/NoOp"
  op: "NoOp"
  input: "^AssignAdd"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1/NoOp_1"
  op: "NoOp"
  input: "^Adam"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^group_deps_1/NoOp"
  input: "^group_deps_1/NoOp_1"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global/l1/W/Assign"
  input: "^global/l1/b/Assign"
  input: "^global/l2/W/Assign"
  input: "^global/l2/b/Assign"
  input: "^global/l3/W/Assign"
  input: "^global/l3/b/Assign"
  input: "^global/l4/W/Assign"
  input: "^global/l4/b/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Assign"
  input: "^global/action/w/Assign"
  input: "^global/action/b/Assign"
  input: "^global/value/w/Assign"
  input: "^global/value/b/Assign"
  input: "^global/global_step/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^global/l1/W/Adam/Assign"
  input: "^global/l1/W/Adam_1/Assign"
  input: "^global/l1/b/Adam/Assign"
  input: "^global/l1/b/Adam_1/Assign"
  input: "^global/l2/W/Adam/Assign"
  input: "^global/l2/W/Adam_1/Assign"
  input: "^global/l2/b/Adam/Assign"
  input: "^global/l2/b/Adam_1/Assign"
  input: "^global/l3/W/Adam/Assign"
  input: "^global/l3/W/Adam_1/Assign"
  input: "^global/l3/b/Adam/Assign"
  input: "^global/l3/b/Adam_1/Assign"
  input: "^global/l4/W/Adam/Assign"
  input: "^global/l4/W/Adam_1/Assign"
  input: "^global/l4/b/Adam/Assign"
  input: "^global/l4/b/Adam_1/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Adam/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  input: "^global/action/w/Adam/Assign"
  input: "^global/action/w/Adam_1/Assign"
  input: "^global/action/b/Adam/Assign"
  input: "^global/action/b/Adam_1/Assign"
  input: "^global/value/w/Adam/Assign"
  input: "^global/value/w/Adam_1/Assign"
  input: "^global/value/b/Adam/Assign"
  input: "^global/value/b/Adam_1/Assign"
  device: "/job:ps/task:0"
}
node {
  name: "init_1/NoOp"
  op: "NoOp"
  input: "^global/l1/W/Assign"
  input: "^global/l1/b/Assign"
  input: "^global/l2/W/Assign"
  input: "^global/l2/b/Assign"
  input: "^global/l3/W/Assign"
  input: "^global/l3/b/Assign"
  input: "^global/l4/W/Assign"
  input: "^global/l4/b/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Assign"
  input: "^global/action/w/Assign"
  input: "^global/action/b/Assign"
  input: "^global/value/w/Assign"
  input: "^global/value/b/Assign"
  input: "^global/global_step/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^global/l1/W/Adam/Assign"
  input: "^global/l1/W/Adam_1/Assign"
  input: "^global/l1/b/Adam/Assign"
  input: "^global/l1/b/Adam_1/Assign"
  input: "^global/l2/W/Adam/Assign"
  input: "^global/l2/W/Adam_1/Assign"
  input: "^global/l2/b/Adam/Assign"
  input: "^global/l2/b/Adam_1/Assign"
  input: "^global/l3/W/Adam/Assign"
  input: "^global/l3/W/Adam_1/Assign"
  input: "^global/l3/b/Adam/Assign"
  input: "^global/l3/b/Adam_1/Assign"
  input: "^global/l4/W/Adam/Assign"
  input: "^global/l4/W/Adam_1/Assign"
  input: "^global/l4/b/Adam/Assign"
  input: "^global/l4/b/Adam_1/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Adam/Assign"
  input: "^global/RNN/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  input: "^global/action/w/Adam/Assign"
  input: "^global/action/w/Adam_1/Assign"
  input: "^global/action/b/Adam/Assign"
  input: "^global/action/b/Adam_1/Assign"
  input: "^global/value/w/Adam/Assign"
  input: "^global/value/w/Adam_1/Assign"
  input: "^global/value/b/Adam/Assign"
  input: "^global/value/b/Adam_1/Assign"
  device: "/job:ps/task:0"
}
node {
  name: "init_1/NoOp_1"
  op: "NoOp"
  input: "^local/l1/W/Assign"
  input: "^local/l1/b/Assign"
  input: "^local/l2/W/Assign"
  input: "^local/l2/b/Assign"
  input: "^local/l3/W/Assign"
  input: "^local/l3/b/Assign"
  input: "^local/l4/W/Assign"
  input: "^local/l4/b/Assign"
  input: "^local/RNN/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^local/RNN/BasicLSTMCell/Linear/Bias/Assign"
  input: "^local/action/w/Assign"
  input: "^local/action/b/Assign"
  input: "^local/value/w/Assign"
  input: "^local/value/b/Assign"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^init_1/NoOp"
  input: "^init_1/NoOp_1"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "global/action/b"
        string_val: "global/action/b/Adam"
        string_val: "global/action/b/Adam_1"
        string_val: "global/action/w"
        string_val: "global/action/w/Adam"
        string_val: "global/action/w/Adam_1"
        string_val: "global/global_step"
        string_val: "global/l1/W"
        string_val: "global/l1/W/Adam"
        string_val: "global/l1/W/Adam_1"
        string_val: "global/l1/b"
        string_val: "global/l1/b/Adam"
        string_val: "global/l1/b/Adam_1"
        string_val: "global/l2/W"
        string_val: "global/l2/W/Adam"
        string_val: "global/l2/W/Adam_1"
        string_val: "global/l2/b"
        string_val: "global/l2/b/Adam"
        string_val: "global/l2/b/Adam_1"
        string_val: "global/l3/W"
        string_val: "global/l3/W/Adam"
        string_val: "global/l3/W/Adam_1"
        string_val: "global/l3/b"
        string_val: "global/l3/b/Adam"
        string_val: "global/l3/b/Adam_1"
        string_val: "global/l4/W"
        string_val: "global/l4/W/Adam"
        string_val: "global/l4/W/Adam_1"
        string_val: "global/l4/b"
        string_val: "global/l4/b/Adam"
        string_val: "global/l4/b/Adam_1"
        string_val: "global/value/b"
        string_val: "global/value/b/Adam"
        string_val: "global/value/b/Adam_1"
        string_val: "global/value/w"
        string_val: "global/value/w/Adam"
        string_val: "global/value/w/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "global/action/b"
  input: "global/action/b/Adam"
  input: "global/action/b/Adam_1"
  input: "global/action/w"
  input: "global/action/w/Adam"
  input: "global/action/w/Adam_1"
  input: "global/global_step"
  input: "global/l1/W"
  input: "global/l1/W/Adam"
  input: "global/l1/W/Adam_1"
  input: "global/l1/b"
  input: "global/l1/b/Adam"
  input: "global/l1/b/Adam_1"
  input: "global/l2/W"
  input: "global/l2/W/Adam"
  input: "global/l2/W/Adam_1"
  input: "global/l2/b"
  input: "global/l2/b/Adam"
  input: "global/l2/b/Adam_1"
  input: "global/l3/W"
  input: "global/l3/W/Adam"
  input: "global/l3/W/Adam_1"
  input: "global/l3/b"
  input: "global/l3/b/Adam"
  input: "global/l3/b/Adam_1"
  input: "global/l4/W"
  input: "global/l4/W/Adam"
  input: "global/l4/W/Adam_1"
  input: "global/l4/b"
  input: "global/l4/b/Adam"
  input: "global/l4/b/Adam_1"
  input: "global/value/b"
  input: "global/value/b/Adam"
  input: "global/value/b/Adam_1"
  input: "global/value/w"
  input: "global/value/w/Adam"
  input: "global/value/w/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  input: "save/RestoreV2_2"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  input: "save/RestoreV2_3"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "save/RestoreV2_4"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  input: "save/RestoreV2_5"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  input: "save/RestoreV2_6"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "save/RestoreV2_7"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3584
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "global/action/b"
  input: "save/RestoreV2_8"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "global/action/b/Adam"
  input: "save/RestoreV2_9"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "global/action/b/Adam_1"
  input: "save/RestoreV2_10"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/w"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "global/action/w"
  input: "save/RestoreV2_11"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/w/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "global/action/w/Adam"
  input: "save/RestoreV2_12"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/action/w/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "global/action/w/Adam_1"
  input: "save/RestoreV2_13"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global/global_step"
  input: "save/RestoreV2_14"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "global/l1/W"
  input: "save/RestoreV2_15"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "global/l1/W/Adam"
  input: "save/RestoreV2_16"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "global/l1/W/Adam_1"
  input: "save/RestoreV2_17"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "global/l1/b"
  input: "save/RestoreV2_18"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "global/l1/b/Adam"
  input: "save/RestoreV2_19"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l1/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "global/l1/b/Adam_1"
  input: "save/RestoreV2_20"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "global/l2/W"
  input: "save/RestoreV2_21"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "global/l2/W/Adam"
  input: "save/RestoreV2_22"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "global/l2/W/Adam_1"
  input: "save/RestoreV2_23"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "global/l2/b"
  input: "save/RestoreV2_24"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "global/l2/b/Adam"
  input: "save/RestoreV2_25"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l2/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "global/l2/b/Adam_1"
  input: "save/RestoreV2_26"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "global/l3/W"
  input: "save/RestoreV2_27"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "global/l3/W/Adam"
  input: "save/RestoreV2_28"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "global/l3/W/Adam_1"
  input: "save/RestoreV2_29"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "global/l3/b"
  input: "save/RestoreV2_30"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "global/l3/b/Adam"
  input: "save/RestoreV2_31"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l3/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "global/l3/b/Adam_1"
  input: "save/RestoreV2_32"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "global/l4/W"
  input: "save/RestoreV2_33"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "global/l4/W/Adam"
  input: "save/RestoreV2_34"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "global/l4/W/Adam_1"
  input: "save/RestoreV2_35"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "global/l4/b"
  input: "save/RestoreV2_36"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "global/l4/b/Adam"
  input: "save/RestoreV2_37"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/l4/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "global/l4/b/Adam_1"
  input: "save/RestoreV2_38"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "global/value/b"
  input: "save/RestoreV2_39"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/b/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "global/value/b/Adam"
  input: "save/RestoreV2_40"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "global/value/b/Adam_1"
  input: "save/RestoreV2_41"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/w"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "global/value/w"
  input: "save/RestoreV2_42"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/w/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "global/value/w/Adam"
  input: "save/RestoreV2_43"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/value/w/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "global/value/w/Adam_1"
  input: "save/RestoreV2_44"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  device: "/job:ps/task:0"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global/l1/W"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "global/l1/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "global/l2/W"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "global/l2/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "global/l3/W"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "global/l3/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "global/l4/W"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "global/l4/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "global/action/w"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "global/action/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "global/value/w"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "global/value/b"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "global/global_step"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "beta1_power"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "beta2_power"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "global/l1/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "global/l1/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "global/l1/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "global/l1/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "global/l2/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "global/l2/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "global/l2/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "global/l2/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "global/l3/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "global/l3/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "global/l3/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "global/l3/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "global/l4/W/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "global/l4/W/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "global/l4/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "global/l4/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/l4/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/RNN/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "global/action/w/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "global/action/w/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "global/action/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "global/action/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/action/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "global/value/w/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "global/value/w/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "global/value/b/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "global/value/b/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/value/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  attr {
    key: "N"
    value {
      i: 45
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "global/l1/W"
        string_val: "global/l1/b"
        string_val: "global/l2/W"
        string_val: "global/l2/b"
        string_val: "global/l3/W"
        string_val: "global/l3/b"
        string_val: "global/l4/W"
        string_val: "global/l4/b"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias"
        string_val: "global/action/w"
        string_val: "global/action/b"
        string_val: "global/value/w"
        string_val: "global/value/b"
        string_val: "global/global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global/l1/W/Adam"
        string_val: "global/l1/W/Adam_1"
        string_val: "global/l1/b/Adam"
        string_val: "global/l1/b/Adam_1"
        string_val: "global/l2/W/Adam"
        string_val: "global/l2/W/Adam_1"
        string_val: "global/l2/b/Adam"
        string_val: "global/l2/b/Adam_1"
        string_val: "global/l3/W/Adam"
        string_val: "global/l3/W/Adam_1"
        string_val: "global/l3/b/Adam"
        string_val: "global/l3/b/Adam_1"
        string_val: "global/l4/W/Adam"
        string_val: "global/l4/W/Adam_1"
        string_val: "global/l4/b/Adam"
        string_val: "global/l4/b/Adam_1"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "global/RNN/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "global/RNN/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "global/action/w/Adam"
        string_val: "global/action/w/Adam_1"
        string_val: "global/action/b/Adam"
        string_val: "global/action/b/Adam_1"
        string_val: "global/value/w/Adam"
        string_val: "global/value/w/Adam_1"
        string_val: "global/value/b/Adam"
        string_val: "global/value/b/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
versions {
  producer: 17
}
